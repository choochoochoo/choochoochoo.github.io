{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 9cec8618c349483cbb21","webpack:///./source/js/index.js","webpack:///./source/js/doors/DoorBase.js","webpack:///./source/js/app.js","webpack:///./source/js/block/Slider.js","webpack:///./source/js/doors/Box.js","webpack:///./source/js/doors/Door0.js","webpack:///./source/js/doors/Door1.js","webpack:///./source/js/doors/Door2.js","webpack:///./~/pepjs/dist/pep.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_pepjs","_app","_app2","window","app","document","querySelector","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","DoorBase","number","onUnlock","onDoorClick","this","isDisabled","openPopup","onCloseClick","closePopup","onUnclockCallback","level","door","popup","close","isLocked","classList","contains","addEventListener","bind","remove","add","showCongratulations","App","el","previousUnlocked","doors","enable","_Door2","_Door4","_Door6","_Box2","initialize","bindEvents","onDeviceReady","receivedEvent","parentElement","getElementById","receivedElement","setAttribute","onerror","navigator","exitApp","_Door","_Door3","_Door5","_Box","Slider","onPointerDown","event","currentPosition","startPosition","pageX","isGestureStarted","disableTransition","onPointerMove","updatePosition","onPointerUp","console","log","type","enableTransition","doorOwner","unlock","resetPosition","requestAnimationFrame","diff","sliderButton","style","transform","transition","containerSlider","show","hide","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_DoorBase2","_DoorBase3","Box","_DoorBase","_onBallPointerDown","conditionDoubleTap","pressBall","setTimeout","unpressBall","killBall","conditionAllKilled","apply","allKilled","balls","forEach","ball","_this","getPrototypeOf","Door0","_onButtonPointerDown","e","checkCondition","_onButtonPointerUp","isOpened","buttons","b","_Slider","_Slider2","Door1","_onButtonPointerDownButton","pressButton","checkConditionButton","_onButtonPointerUpButton","unpressButton","switchOffAlarm","slider","button","switchOnAlarm","alarm","Door2","centerPointEvent","resetResult","_onCircle1PointerDown","circle1","isPressedButton","endPointEvent","thetaDelta","angle","pageY","_onCircle1PointerUp","_onCircle1PointerMove","theta","deltaAngle","isRevers","result","getResult","writeResult","isWin","monitor","innerText","Math","round","cx","cy","ex","ey","dy","dx","atan2","PI","global","factory","PointerEvent","inType","inDict","createEvent","initEvent","bubbles","cancelable","MOUSE_PROPS","MOUSE_DEFAULTS","pressure","x","clientX","y","clientY","pointerId","width","height","tiltX","tiltY","pointerType","hwTimestamp","isPrimary","SparseArrayMap","array","size","Installer","changed","binder","addCallback","removeCallback","changedCallback","MO","observer","mutationWatcher","shadowSelector","v","selector","rule","applyAttributeStyles","hasNativePE","attrib2css","r","String","styles","hasShadowRoot","selectors","map","createElement","textContent","head","appendChild","platform_events__applyPolyfill","_PointerEvent","msPointerEnabled","tp","msMaxTouchPoints","_dispatcher","registerSource","ms","mouse","undefined","ontouchstart","touch","register","assertDown","pointermap","has","Error","_capture__applyPolyfill","Element","setPointerCapture","s","releasePointerCapture","USE_MAP","Map","PointerMap","set","k","delete","get","clear","callback","thisArg","_pointermap","CLONE_PROPS","CLONE_DEFAULTS","BOUNDARY_EVENTS","pointerover","pointerout","pointerenter","pointerleave","HAS_SVG_INSTANCE","SVGElementInstance","dispatcher","eventMap","captureInfo","eventSources","eventSourceList","name","source","newEvents","events","push","element","es","l","unregister","container","contained","down","inEvent","fireEvent","move","up","enter","leave","over","out","cancel","leaveOut","relatedTarget","enterOver","eventHandler","_handledByPE","fn","listen","addEvent","unlisten","removeEvent","eventName","boundHandler","removeEventListener","makeEvent","preventDefault","_target","dispatchEvent","cloneEvent","eventCopy","correspondingUseElement","getTarget","capture","setCapture","inPointerId","inTarget","releaseCapture","implicitRelease","asyncDispatchEvent","t","targeting","shadow","inEl","shadowRoot","webkitShadowRoot","canTarget","Boolean","elementFromPoint","targetingShadow","olderShadow","os","olderShadowRoot","se","allShadows","shadows","searchRoot","inRoot","st","sr","ssr","owner","parentNode","nodeType","Node","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","findTarget","Array","toArray","slice","filter","MutationObserver","WebKitMutationObserver","SELECTOR","OBSERVER_INIT","subtree","childList","attributes","attributeOldValue","attributeFilter","watchSubtree","observe","enableOnSubtree","readyState","installOnLoad","installNewSubtree","findElements","addElement","querySelectorAll","removeElement","elementChanged","oldValue","concatLists","accum","list","concat","isElement","n","ELEMENT_NODE","flattenMutationTree","inNodes","tree","reduce","mutations","mutationHandler","added","addedNodes","removed","removedNodes","installer","MSPointerEvent","ShadowDOMPolyfill","createShadowRoot","mouse__pointermap","DEDUP_DIST","BUTTON_TO_BUTTONS","HAS_BUTTONS","MouseEvent","INSTALLER","mouseEvents","POINTER_ID","POINTER_TYPE","lastTouches","isEventSimulatedFromTouch","lts","abs","prepareEvent","pd","prepareButtonsForMove","mousedown","mousemove","mouseup","cleanupMouse","mouseover","mouseout","touch__pointermap","DEDUP_TIMEOUT","CLICK_COUNT_TIMEOUT","ATTRIB","HAS_TOUCH_ACTION_DELAY","touchEvents","elementAdded","a","getAttribute","touchActionToScrollType","_scrollType","elementRemoved","oldSt","scrollTypes","EMITTER","XSCROLLER","YSCROLLER","SCROLLER","touchAction","exec","firstTouch","isPrimaryTouch","inTouch","identifier","setPrimaryTouch","firstXY","X","Y","scrolling","cancelResetClickCount","removePrimaryPointer","inPointer","resetClickCount","clickCount","resetId","clearTimeout","typeToButtons","ret","touchToPointer","cte","currentTouchEvent","detail","radiusX","webkitRadiusX","radiusY","webkitRadiusY","force","webkitForce","processTouches","inFunction","tl","changedTouches","shouldScroll","scrollAxis","currentTarget","oa","da","doa","findTouch","inTL","inId","vacuumTouches","touches","d","cancelOut","touchstart","dedupSynthMouse","overDown","outTarget","touchmove","touchcancel","moveOverOut","pointer","outEvent","touchend","upOut","cleanUpPointer","lt","indexOf","splice","ms__pointermap","HAS_BITMAP_TYPE","MSPOINTER_TYPE_MOUSE","msEvents","POINTER_TYPES","cleanup","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSLostPointerCapture","MSGotPointerCapture","msSetPointerCapture","msReleasePointerCapture","pointerevents","targetFinding"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _pepjs = __webpack_require__(9);\n\t\n\tvar _pepjs2 = _interopRequireDefault(_pepjs);\n\t\n\tvar _app = __webpack_require__(2);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\t__webpack_require__(8);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Start the app\n\twindow.app = new _app2.default(document.querySelector('.app'));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * Базовый класс всех дверей\r\n\t * @class DoorBase\r\n\t * @param {Number} number\r\n\t * @param {Function} onUnlock\r\n\t */\n\tvar DoorBase = function () {\n\t    function DoorBase(number, onUnlock) {\n\t        _classCallCheck(this, DoorBase);\n\t\n\t        this.number = number;\n\t        this.onUnclockCallback = onUnlock;\n\t\n\t        this.level = document.querySelector('.level_' + number);\n\t        this.door = document.querySelector('.door_level_' + number);\n\t        this.popup = document.querySelector('.popup_level_' + number);\n\t        this.close = this.popup.querySelector('.popup__close');\n\t\n\t        this.isLocked = true;\n\t        this.isDisabled = this.door.classList.contains('door_disabled');\n\t\n\t        this.door.addEventListener('click', onDoorClick.bind(this));\n\t        this.close.addEventListener('click', onCloseClick.bind(this));\n\t\n\t        function onDoorClick() {\n\t            if (!this.isDisabled) {\n\t                this.openPopup();\n\t            }\n\t        }\n\t\n\t        function onCloseClick() {\n\t            this.closePopup();\n\t        }\n\t    }\n\t\n\t    _createClass(DoorBase, [{\n\t        key: 'openPopup',\n\t        value: function openPopup() {\n\t            this.popup.classList.remove('popup_hidden');\n\t        }\n\t    }, {\n\t        key: 'closePopup',\n\t        value: function closePopup() {\n\t            this.popup.classList.add('popup_hidden');\n\t        }\n\t    }, {\n\t        key: 'enable',\n\t        value: function enable() {\n\t            this.door.classList.remove('door_disabled');\n\t            this.isDisabled = false;\n\t        }\n\t\n\t        /**\r\n\t         * Вызывается, если после последовательности действий\r\n\t         * дверь считается открытой\r\n\t         */\n\t\n\t    }, {\n\t        key: 'unlock',\n\t        value: function unlock() {\n\t            this.door.classList.remove('door_locked');\n\t            this.isLocked = false;\n\t            this.closePopup();\n\t            this.onUnclockCallback();\n\t            this.showCongratulations();\n\t        }\n\t    }, {\n\t        key: 'showCongratulations',\n\t        value: function showCongratulations() {\n\t            //alert('Дверь ' + this.number + ' открыта!')\n\t        }\n\t    }]);\n\t\n\t    return DoorBase;\n\t}();\n\t\n\texports.default = DoorBase;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = App;\n\t\n\tvar _Door = __webpack_require__(5);\n\t\n\tvar _Door2 = _interopRequireDefault(_Door);\n\t\n\tvar _Door3 = __webpack_require__(6);\n\t\n\tvar _Door4 = _interopRequireDefault(_Door3);\n\t\n\tvar _Door5 = __webpack_require__(7);\n\t\n\tvar _Door6 = _interopRequireDefault(_Door5);\n\t\n\tvar _Box = __webpack_require__(4);\n\t\n\tvar _Box2 = _interopRequireDefault(_Box);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t * @class App\r\n\t * @param {Element} el\r\n\t */\n\tfunction App(el) {\n\t    var doors = [new _Door2.default(0, onUnlock), new _Door4.default(1, onUnlock), new _Door6.default(2, onUnlock), new _Box2.default(3, onUnlock)];\n\t\n\t    this.doors = doors;\n\t\n\t    /**\r\n\t     * Callback вызывается в коде двери\r\n\t     * Тут даем возможность открыть следующие двери\r\n\t     */\n\t    function onUnlock() {\n\t        var previousUnlocked;\n\t\n\t        // Даем открыть следующую дверь\n\t        for (var i = 0; i < doors.length; i++) {\n\t            if (!doors[i].isLocked) {\n\t                previousUnlocked = true;\n\t            } else {\n\t                if (previousUnlocked && doors[i].isLocked) {\n\t                    doors[i].enable();\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    this.initialize = function () {\n\t        this.bindEvents();\n\t    };\n\t\n\t    this.bindEvents = function () {\n\t        document.addEventListener('deviceready', this.onDeviceReady.bind(this), false);\n\t    };\n\t\n\t    this.onDeviceReady = function () {\n\t        this.receivedEvent('deviceready');\n\t    };\n\t\n\t    // Update DOM on a Received Event\n\t    this.receivedEvent = function (id) {\n\t        var parentElement = document.getElementById(id);\n\t        var receivedElement = parentElement.querySelector('.received');\n\t        receivedElement.setAttribute('style', 'display:block;');\n\t    };\n\t\n\t    window.onerror = function () {\n\t        // здесь можно залогировать и выйти\n\t\n\t        // Попробуем выйти\n\t        if (navigator.app.exitApp) {\n\t            navigator.app.exitApp();\n\t        }\n\t    };\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Slider = function Slider(el, door) {\n\t    _classCallCheck(this, Slider);\n\t\n\t    var containerSlider = el;\n\t    var sliderButton = el.querySelector('.slider__button');\n\t    var startPosition = 0;\n\t    var currentPosition = 0;\n\t    var isGestureStarted = false;\n\t    var doorOwner = door;\n\t\n\t    containerSlider.addEventListener('pointerdown', onPointerDown);\n\t    containerSlider.addEventListener('pointermove', onPointerMove);\n\t\n\t    containerSlider.addEventListener('pointerup', onPointerUp);\n\t    containerSlider.addEventListener('pointercancel', onPointerUp);\n\t    containerSlider.addEventListener('pointerleave', onPointerUp);\n\t\n\t    function onPointerDown(event) {\n\t\n\t        currentPosition = startPosition = event.pageX;\n\t        isGestureStarted = true;\n\t\n\t        // убрал потому что в ie сразу при нажатии на кнопку конкретно\n\t        // сразу всплывает pointerleave\n\t        //containerSlider.setPointerCapture(event.pointerId);\n\t\n\t        disableTransition();\n\t    }\n\t\n\t    function onPointerMove(event) {\n\t        if (!isGestureStarted) {\n\t            return;\n\t        }\n\t\n\t        currentPosition = event.pageX;\n\t        updatePosition();\n\t    }\n\t\n\t    function onPointerUp(event) {\n\t\n\t        console.log(event.type);\n\t\n\t        currentPosition = event.pageX;\n\t\n\t        enableTransition();\n\t\n\t        if (currentPosition - startPosition > 100 && isGestureStarted) {\n\t            doorOwner.unlock();\n\t        } else {\n\t            resetPosition();\n\t        }\n\t\n\t        isGestureStarted = false;\n\t    }\n\t\n\t    function updatePosition() {\n\t        requestAnimationFrame(function () {\n\t            var diff = currentPosition - startPosition;\n\t\n\t            if (diff < 0) {\n\t                diff = 0;\n\t            }\n\t\n\t            if (diff > 240) {\n\t                diff = 240;\n\t            }\n\t\n\t            sliderButton.style.transform = 'translateX(' + diff + 'px)';\n\t        });\n\t    }\n\t\n\t    function resetPosition() {\n\t        requestAnimationFrame(function () {\n\t            sliderButton.style.transform = '';\n\t        });\n\t    }\n\t\n\t    function disableTransition() {\n\t        sliderButton.style.transition = 'none';\n\t    }\n\t\n\t    function enableTransition() {\n\t        sliderButton.style.transition = '';\n\t    }\n\t\n\t    this.show = function () {\n\t        containerSlider.classList.remove('slider_invisible');\n\t    };\n\t\n\t    this.hide = function () {\n\t        containerSlider.classList.add('slider_invisible');\n\t    };\n\t};\n\t\n\texports.default = Slider;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _DoorBase2 = __webpack_require__(1);\n\t\n\tvar _DoorBase3 = _interopRequireDefault(_DoorBase2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\r\n\t * Сундук\r\n\t * @class Box\r\n\t * @augments DoorBase\r\n\t * @param {Number} number\r\n\t * @param {Function} onUnlock\r\n\t */\n\tvar Box = function (_DoorBase) {\n\t    _inherits(Box, _DoorBase);\n\t\n\t    function Box(number, onUnlock) {\n\t        _classCallCheck(this, Box);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Box).call(this, number, onUnlock));\n\t\n\t        _this.showCongratulations = function () {\n\t            //alert('Поздравляю! Игра пройдена!');\n\t        };\n\t\n\t        var balls = [_this.popup.querySelector('.box-riddle__ball_0'), _this.popup.querySelector('.box-riddle__ball_1'), _this.popup.querySelector('.box-riddle__ball_2'), _this.popup.querySelector('.box-riddle__ball_3')];\n\t\n\t        balls.forEach(function (ball) {\n\t            ball.addEventListener('pointerdown', _onBallPointerDown.bind(this));\n\t        }.bind(_this));\n\t\n\t        function _onBallPointerDown(event) {\n\t            conditionDoubleTap.call(this, event);\n\t            pressBall.call(this, event);\n\t            setTimeout(unpressBall.bind(this, event), 300);\n\t        }\n\t\n\t        function conditionDoubleTap(event) {\n\t            if (event.target.classList.contains('box-riddle__ball_pressed')) {\n\t                killBall.call(this, event);\n\t                conditionAllKilled.apply(this);\n\t            }\n\t        }\n\t\n\t        function conditionAllKilled() {\n\t\n\t            var allKilled = true;\n\t            balls.forEach(function (ball) {\n\t                if (!ball.classList.contains('box-riddle__ball_killed')) {\n\t                    allKilled = false;\n\t                }\n\t            });\n\t\n\t            if (allKilled) {\n\t                this.unlock();\n\t            }\n\t        }\n\t\n\t        function pressBall(event) {\n\t            event.target.classList.add('box-riddle__ball_pressed');\n\t        }\n\t\n\t        function unpressBall(event) {\n\t            event.target.classList.remove('box-riddle__ball_pressed');\n\t        }\n\t\n\t        function killBall(event) {\n\t            event.target.classList.add('box-riddle__ball_killed');\n\t        }\n\t        return _this;\n\t    }\n\t\n\t    return Box;\n\t}(_DoorBase3.default);\n\t\n\texports.default = Box;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _DoorBase2 = __webpack_require__(1);\n\t\n\tvar _DoorBase3 = _interopRequireDefault(_DoorBase2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// ===================== Пример кода первой двери =======================\n\t/**\r\n\t * @class Door0\r\n\t * @augments DoorBase\r\n\t * @param {Number} number\r\n\t * @param {Function} onUnlock\r\n\t */\n\tvar Door0 = function (_DoorBase) {\n\t    _inherits(Door0, _DoorBase);\n\t\n\t    function Door0(number, onUnlock) {\n\t        _classCallCheck(this, Door0);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Door0).call(this, number, onUnlock));\n\t\n\t        var buttons = [_this.popup.querySelector('.door-riddle__button_0'), _this.popup.querySelector('.door-riddle__button_1'), _this.popup.querySelector('.door-riddle__button_2')];\n\t\n\t        buttons.forEach(function (b) {\n\t            b.addEventListener('pointerdown', _onButtonPointerDown.bind(this));\n\t            b.addEventListener('pointerup', _onButtonPointerUp.bind(this));\n\t            b.addEventListener('pointercancel', _onButtonPointerUp.bind(this));\n\t            b.addEventListener('pointerleave', _onButtonPointerUp.bind(this));\n\t        }.bind(_this));\n\t\n\t        function _onButtonPointerDown(e) {\n\t            e.target.classList.add('door-riddle__button_pressed');\n\t            checkCondition.apply(this);\n\t        }\n\t\n\t        function _onButtonPointerUp(e) {\n\t            e.target.classList.remove('door-riddle__button_pressed');\n\t        }\n\t\n\t        /**\r\n\t         * Проверяем, можно ли теперь открыть дверь\r\n\t         */\n\t        function checkCondition() {\n\t            var isOpened = true;\n\t            buttons.forEach(function (b) {\n\t                if (!b.classList.contains('door-riddle__button_pressed')) {\n\t                    isOpened = false;\n\t                }\n\t            });\n\t\n\t            // Если все три кнопки зажаты одновременно, то откроем эту дверь\n\t            if (isOpened) {\n\t                this.unlock();\n\t            }\n\t        }\n\t        return _this;\n\t    }\n\t\n\t    return Door0;\n\t}(_DoorBase3.default);\n\t\n\texports.default = Door0;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _DoorBase2 = __webpack_require__(1);\n\t\n\tvar _DoorBase3 = _interopRequireDefault(_DoorBase2);\n\t\n\tvar _Slider = __webpack_require__(3);\n\t\n\tvar _Slider2 = _interopRequireDefault(_Slider);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\r\n\t * @class Door1\r\n\t * @augments DoorBase\r\n\t * @param {Number} number\r\n\t * @param {Function} onUnlock\r\n\t */\n\tvar Door1 = function (_DoorBase) {\n\t    _inherits(Door1, _DoorBase);\n\t\n\t    function Door1(number, onUnlock) {\n\t        _classCallCheck(this, Door1);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Door1).call(this, number, onUnlock));\n\t\n\t        var slider = new _Slider2.default(_this.popup.querySelector('.slider'), _this);\n\t\n\t        var alarm = _this.popup.querySelector('.door1-riddle__alarm');\n\t\n\t        var buttons = [_this.popup.querySelector('.door1-riddle__button_0'), _this.popup.querySelector('.door1-riddle__button_1')];\n\t\n\t        buttons.forEach(function (b) {\n\t            b.addEventListener('pointerdown', _onButtonPointerDownButton.bind(this));\n\t            b.addEventListener('pointerup', _onButtonPointerUpButton.bind(this));\n\t            b.addEventListener('pointercancel', _onButtonPointerUpButton.bind(this));\n\t            b.addEventListener('pointerleave', _onButtonPointerUpButton.bind(this));\n\t        }.bind(_this));\n\t\n\t        function _onButtonPointerDownButton(event) {\n\t            pressButton.call(this, event);\n\t            checkConditionButton.apply(this);\n\t        }\n\t\n\t        function _onButtonPointerUpButton(event) {\n\t            unpressButton.call(this, event);\n\t            switchOffAlarm();\n\t            slider.hide();\n\t        }\n\t\n\t        function checkConditionButton() {\n\t            var isOpened = true;\n\t            buttons.forEach(function (button) {\n\t                if (!button.classList.contains('door1-riddle__button_pressed')) {\n\t                    isOpened = false;\n\t                }\n\t            });\n\t\n\t            if (isOpened) {\n\t                switchOnAlarm();\n\t                slider.show();\n\t            }\n\t        }\n\t\n\t        function pressButton(event) {\n\t            event.target.classList.add('door1-riddle__button_pressed');\n\t        }\n\t\n\t        function unpressButton(event) {\n\t            event.target.classList.remove('door1-riddle__button_pressed');\n\t        }\n\t\n\t        function switchOnAlarm() {\n\t            alarm.classList.add('door1-riddle__alarm_active');\n\t        }\n\t\n\t        function switchOffAlarm() {\n\t            alarm.classList.remove('door1-riddle__alarm_active');\n\t        }\n\t        return _this;\n\t    }\n\t\n\t    return Door1;\n\t}(_DoorBase3.default);\n\t\n\texports.default = Door1;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _DoorBase2 = __webpack_require__(1);\n\t\n\tvar _DoorBase3 = _interopRequireDefault(_DoorBase2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\r\n\t * @class Door2\r\n\t * @augments DoorBase\r\n\t * @param {Number} number\r\n\t * @param {Function} onUnlock\r\n\t */\n\tvar Door2 = function (_DoorBase) {\n\t    _inherits(Door2, _DoorBase);\n\t\n\t    function Door2(number, onUnlock) {\n\t        _classCallCheck(this, Door2);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Door2).call(this, number, onUnlock));\n\t\n\t        var centerPointEvent = null;\n\t        var endPointEvent = null;\n\t        var isGestureStarted = false;\n\t        var thetaDelta = 0;\n\t        var result = 0;\n\t\n\t        var circle1 = _this.popup.querySelector('.door2-riddle__circle1');\n\t        var button = _this.popup.querySelector('.door2-riddle__button');\n\t        var monitor = _this.popup.querySelector('.door2-riddle__monitor');\n\t\n\t        circle1.addEventListener('pointerleave', _onCircle1PointerUp.bind(_this));\n\t        circle1.addEventListener('pointercancel', _onCircle1PointerUp.bind(_this));\n\t        circle1.addEventListener('pointerup', _onCircle1PointerUp.bind(_this));\n\t        circle1.addEventListener('pointerdown', _onCircle1PointerDown.bind(_this));\n\t        circle1.addEventListener('pointermove', _onCircle1PointerMove.bind(_this));\n\t\n\t        button.addEventListener('pointerdown', _onButtonPointerDown.bind(_this));\n\t        button.addEventListener('pointerleave', _onButtonPointerUp.bind(_this));\n\t        button.addEventListener('pointercancel', _onButtonPointerUp.bind(_this));\n\t        button.addEventListener('pointerup', _onButtonPointerUp.bind(_this));\n\t\n\t        function _onButtonPointerDown(event) {\n\t            pressButton();\n\t            centerPointEvent = event;\n\t        }\n\t\n\t        function _onButtonPointerUp(event) {\n\t            unpressButton();\n\t            centerPointEvent = null;\n\t            resetResult();\n\t        }\n\t\n\t        function _onCircle1PointerDown(event) {\n\t\n\t            if (circle1 === event.target && isPressedButton()) {\n\t                console.log('circle 1' + event.type);\n\t\n\t                isGestureStarted = true;\n\t\n\t                endPointEvent = event;\n\t\n\t                thetaDelta = angle(centerPointEvent.pageX, centerPointEvent.pageY, endPointEvent.pageX, endPointEvent.pageY);\n\t\n\t                console.log(endPointEvent);\n\t            }\n\t        }\n\t\n\t        function _onCircle1PointerUp(event) {\n\t            console.log(event.type);\n\t            isGestureStarted = false;\n\t            endPointEvent = null;\n\t            resetResult();\n\t        }\n\t\n\t        function _onCircle1PointerMove(event) {\n\t\n\t            if (isGestureStarted) {\n\t\n\t                endPointEvent = event;\n\t\n\t                var theta = angle(centerPointEvent.pageX, centerPointEvent.pageY, endPointEvent.pageX, endPointEvent.pageY);\n\t\n\t                theta = deltaAngle(theta);\n\t\n\t                // не дадим в обратную сторону крутить\n\t                if (isRevers(theta)) {\n\t                    resetResult();\n\t                    return;\n\t                }\n\t\n\t                result = getResult(theta);\n\t\n\t                writeResult(result);\n\t\n\t                if (isWin(result)) {\n\t                    this.unlock();\n\t                }\n\t            }\n\t        }\n\t\n\t        function resetResult() {\n\t            monitor.innerText = '';\n\t            result = 0;\n\t        }\n\t\n\t        function writeResult(result) {\n\t            monitor.innerText = Math.round(result) + '%';\n\t        }\n\t\n\t        function isWin(result) {\n\t            return result >= 100;\n\t        }\n\t\n\t        function getResult(theta) {\n\t            return theta / 180 * 100;\n\t        }\n\t\n\t        function isRevers(theta) {\n\t            return theta > 190;\n\t        }\n\t\n\t        function angle(cx, cy, ex, ey) {\n\t            var dy = ey - cy;\n\t            var dx = ex - cx;\n\t            var theta = Math.atan2(dy, dx);\n\t            theta *= 180 / Math.PI;\n\t            return theta;\n\t        }\n\t\n\t        function deltaAngle(theta) {\n\t\n\t            var result = theta - thetaDelta;\n\t\n\t            if (result < 0) {\n\t                result += 360;\n\t            }\n\t\n\t            return result;\n\t        }\n\t\n\t        function pressButton() {\n\t            button.classList.add('door2-riddle__button_pressed');\n\t        }\n\t\n\t        function unpressButton() {\n\t            button.classList.remove('door2-riddle__button_pressed');\n\t        }\n\t\n\t        function isPressedButton() {\n\t            if (button.classList.contains('door2-riddle__button_pressed')) {\n\t                return true;\n\t            }\n\t\n\t            return false;\n\t        }\n\t        return _this;\n\t    }\n\t\n\t    return Door2;\n\t}(_DoorBase3.default);\n\t\n\texports.default = Door2;\n\t\n\t\n\tDoor2.prototype = Object.create(_DoorBase3.default.prototype);\n\tDoor2.prototype.constructor = _DoorBase3.default;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * PEP v0.4.1 | https://github.com/jquery/PEP\n\t * Copyright jQuery Foundation and other contributors | http://jquery.org/license\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.PointerEventsPolyfill = factory()\n\t}(this, function () { 'use strict';\n\t\n\t  /**\n\t   * This is the constructor for new PointerEvents.\n\t   *\n\t   * New Pointer Events must be given a type, and an optional dictionary of\n\t   * initialization properties.\n\t   *\n\t   * Due to certain platform requirements, events returned from the constructor\n\t   * identify as MouseEvents.\n\t   *\n\t   * @constructor\n\t   * @param {String} inType The type of the event to create.\n\t   * @param {Object} [inDict] An optional dictionary of initial event properties.\n\t   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\n\t   */\n\t  var MOUSE_PROPS = [\n\t    'bubbles',\n\t    'cancelable',\n\t    'view',\n\t    'detail',\n\t    'screenX',\n\t    'screenY',\n\t    'clientX',\n\t    'clientY',\n\t    'ctrlKey',\n\t    'altKey',\n\t    'shiftKey',\n\t    'metaKey',\n\t    'button',\n\t    'relatedTarget',\n\t    'pageX',\n\t    'pageY'\n\t  ];\n\t\n\t  var MOUSE_DEFAULTS = [\n\t    false,\n\t    false,\n\t    null,\n\t    null,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    false,\n\t    false,\n\t    false,\n\t    false,\n\t    0,\n\t    null,\n\t    0,\n\t    0\n\t  ];\n\t\n\t  function PointerEvent(inType, inDict) {\n\t    inDict = inDict || Object.create(null);\n\t\n\t    var e = document.createEvent('Event');\n\t    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false);\n\t\n\t    // define inherited MouseEvent properties\n\t    // skip bubbles and cancelable since they're set above in initEvent()\n\t    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\n\t      p = MOUSE_PROPS[i];\n\t      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\n\t    }\n\t    e.buttons = inDict.buttons || 0;\n\t\n\t    // Spec requires that pointers without pressure specified use 0.5 for down\n\t    // state and 0 for up state.\n\t    var pressure = 0;\n\t    if (inDict.pressure) {\n\t      pressure = inDict.pressure;\n\t    } else {\n\t      pressure = e.buttons ? 0.5 : 0;\n\t    }\n\t\n\t    // add x/y properties aliased to clientX/Y\n\t    e.x = e.clientX;\n\t    e.y = e.clientY;\n\t\n\t    // define the properties of the PointerEvent interface\n\t    e.pointerId = inDict.pointerId || 0;\n\t    e.width = inDict.width || 0;\n\t    e.height = inDict.height || 0;\n\t    e.pressure = pressure;\n\t    e.tiltX = inDict.tiltX || 0;\n\t    e.tiltY = inDict.tiltY || 0;\n\t    e.pointerType = inDict.pointerType || '';\n\t    e.hwTimestamp = inDict.hwTimestamp || 0;\n\t    e.isPrimary = inDict.isPrimary || false;\n\t    return e;\n\t  }\n\t\n\t  var _PointerEvent = PointerEvent;\n\t\n\t  /**\n\t   * This module implements a map of pointer states\n\t   */\n\t  var USE_MAP = window.Map && window.Map.prototype.forEach;\n\t  var PointerMap = USE_MAP ? Map : SparseArrayMap;\n\t\n\t  function SparseArrayMap() {\n\t    this.array = [];\n\t    this.size = 0;\n\t  }\n\t\n\t  SparseArrayMap.prototype = {\n\t    set: function(k, v) {\n\t      if (v === undefined) {\n\t        return this.delete(k);\n\t      }\n\t      if (!this.has(k)) {\n\t        this.size++;\n\t      }\n\t      this.array[k] = v;\n\t    },\n\t    has: function(k) {\n\t      return this.array[k] !== undefined;\n\t    },\n\t    delete: function(k) {\n\t      if (this.has(k)) {\n\t        delete this.array[k];\n\t        this.size--;\n\t      }\n\t    },\n\t    get: function(k) {\n\t      return this.array[k];\n\t    },\n\t    clear: function() {\n\t      this.array.length = 0;\n\t      this.size = 0;\n\t    },\n\t\n\t    // return value, key, map\n\t    forEach: function(callback, thisArg) {\n\t      return this.array.forEach(function(v, k) {\n\t        callback.call(thisArg, v, k, this);\n\t      }, this);\n\t    }\n\t  };\n\t\n\t  var _pointermap = PointerMap;\n\t\n\t  var CLONE_PROPS = [\n\t\n\t    // MouseEvent\n\t    'bubbles',\n\t    'cancelable',\n\t    'view',\n\t    'detail',\n\t    'screenX',\n\t    'screenY',\n\t    'clientX',\n\t    'clientY',\n\t    'ctrlKey',\n\t    'altKey',\n\t    'shiftKey',\n\t    'metaKey',\n\t    'button',\n\t    'relatedTarget',\n\t\n\t    // DOM Level 3\n\t    'buttons',\n\t\n\t    // PointerEvent\n\t    'pointerId',\n\t    'width',\n\t    'height',\n\t    'pressure',\n\t    'tiltX',\n\t    'tiltY',\n\t    'pointerType',\n\t    'hwTimestamp',\n\t    'isPrimary',\n\t\n\t    // event instance\n\t    'type',\n\t    'target',\n\t    'currentTarget',\n\t    'which',\n\t    'pageX',\n\t    'pageY',\n\t    'timeStamp'\n\t  ];\n\t\n\t  var CLONE_DEFAULTS = [\n\t\n\t    // MouseEvent\n\t    false,\n\t    false,\n\t    null,\n\t    null,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    false,\n\t    false,\n\t    false,\n\t    false,\n\t    0,\n\t    null,\n\t\n\t    // DOM Level 3\n\t    0,\n\t\n\t    // PointerEvent\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    '',\n\t    0,\n\t    false,\n\t\n\t    // event instance\n\t    '',\n\t    null,\n\t    null,\n\t    0,\n\t    0,\n\t    0,\n\t    0\n\t  ];\n\t\n\t  var BOUNDARY_EVENTS = {\n\t    'pointerover': 1,\n\t    'pointerout': 1,\n\t    'pointerenter': 1,\n\t    'pointerleave': 1\n\t  };\n\t\n\t  var HAS_SVG_INSTANCE = (typeof SVGElementInstance !== 'undefined');\n\t\n\t  /**\n\t   * This module is for normalizing events. Mouse and Touch events will be\n\t   * collected here, and fire PointerEvents that have the same semantics, no\n\t   * matter the source.\n\t   * Events fired:\n\t   *   - pointerdown: a pointing is added\n\t   *   - pointerup: a pointer is removed\n\t   *   - pointermove: a pointer is moved\n\t   *   - pointerover: a pointer crosses into an element\n\t   *   - pointerout: a pointer leaves an element\n\t   *   - pointercancel: a pointer will no longer generate events\n\t   */\n\t  var dispatcher = {\n\t    pointermap: new _pointermap(),\n\t    eventMap: Object.create(null),\n\t    captureInfo: Object.create(null),\n\t\n\t    // Scope objects for native events.\n\t    // This exists for ease of testing.\n\t    eventSources: Object.create(null),\n\t    eventSourceList: [],\n\t    /**\n\t     * Add a new event source that will generate pointer events.\n\t     *\n\t     * `inSource` must contain an array of event names named `events`, and\n\t     * functions with the names specified in the `events` array.\n\t     * @param {string} name A name for the event source\n\t     * @param {Object} source A new source of platform events.\n\t     */\n\t    registerSource: function(name, source) {\n\t      var s = source;\n\t      var newEvents = s.events;\n\t      if (newEvents) {\n\t        newEvents.forEach(function(e) {\n\t          if (s[e]) {\n\t            this.eventMap[e] = s[e].bind(s);\n\t          }\n\t        }, this);\n\t        this.eventSources[name] = s;\n\t        this.eventSourceList.push(s);\n\t      }\n\t    },\n\t    register: function(element) {\n\t      var l = this.eventSourceList.length;\n\t      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\t\n\t        // call eventsource register\n\t        es.register.call(es, element);\n\t      }\n\t    },\n\t    unregister: function(element) {\n\t      var l = this.eventSourceList.length;\n\t      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\t\n\t        // call eventsource register\n\t        es.unregister.call(es, element);\n\t      }\n\t    },\n\t    contains: /*scope.external.contains || */function(container, contained) {\n\t      try {\n\t        return container.contains(contained);\n\t      } catch (ex) {\n\t\n\t        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n\t        return false;\n\t      }\n\t    },\n\t\n\t    // EVENTS\n\t    down: function(inEvent) {\n\t      inEvent.bubbles = true;\n\t      this.fireEvent('pointerdown', inEvent);\n\t    },\n\t    move: function(inEvent) {\n\t      inEvent.bubbles = true;\n\t      this.fireEvent('pointermove', inEvent);\n\t    },\n\t    up: function(inEvent) {\n\t      inEvent.bubbles = true;\n\t      this.fireEvent('pointerup', inEvent);\n\t    },\n\t    enter: function(inEvent) {\n\t      inEvent.bubbles = false;\n\t      this.fireEvent('pointerenter', inEvent);\n\t    },\n\t    leave: function(inEvent) {\n\t      inEvent.bubbles = false;\n\t      this.fireEvent('pointerleave', inEvent);\n\t    },\n\t    over: function(inEvent) {\n\t      inEvent.bubbles = true;\n\t      this.fireEvent('pointerover', inEvent);\n\t    },\n\t    out: function(inEvent) {\n\t      inEvent.bubbles = true;\n\t      this.fireEvent('pointerout', inEvent);\n\t    },\n\t    cancel: function(inEvent) {\n\t      inEvent.bubbles = true;\n\t      this.fireEvent('pointercancel', inEvent);\n\t    },\n\t    leaveOut: function(event) {\n\t      this.out(event);\n\t      if (!this.contains(event.target, event.relatedTarget)) {\n\t        this.leave(event);\n\t      }\n\t    },\n\t    enterOver: function(event) {\n\t      this.over(event);\n\t      if (!this.contains(event.target, event.relatedTarget)) {\n\t        this.enter(event);\n\t      }\n\t    },\n\t\n\t    // LISTENER LOGIC\n\t    eventHandler: function(inEvent) {\n\t\n\t      // This is used to prevent multiple dispatch of pointerevents from\n\t      // platform events. This can happen when two elements in different scopes\n\t      // are set up to create pointer events, which is relevant to Shadow DOM.\n\t      if (inEvent._handledByPE) {\n\t        return;\n\t      }\n\t      var type = inEvent.type;\n\t      var fn = this.eventMap && this.eventMap[type];\n\t      if (fn) {\n\t        fn(inEvent);\n\t      }\n\t      inEvent._handledByPE = true;\n\t    },\n\t\n\t    // set up event listeners\n\t    listen: function(target, events) {\n\t      events.forEach(function(e) {\n\t        this.addEvent(target, e);\n\t      }, this);\n\t    },\n\t\n\t    // remove event listeners\n\t    unlisten: function(target, events) {\n\t      events.forEach(function(e) {\n\t        this.removeEvent(target, e);\n\t      }, this);\n\t    },\n\t    addEvent: /*scope.external.addEvent || */function(target, eventName) {\n\t      target.addEventListener(eventName, this.boundHandler);\n\t    },\n\t    removeEvent: /*scope.external.removeEvent || */function(target, eventName) {\n\t      target.removeEventListener(eventName, this.boundHandler);\n\t    },\n\t\n\t    // EVENT CREATION AND TRACKING\n\t    /**\n\t     * Creates a new Event of type `inType`, based on the information in\n\t     * `inEvent`.\n\t     *\n\t     * @param {string} inType A string representing the type of event to create\n\t     * @param {Event} inEvent A platform event with a target\n\t     * @return {Event} A PointerEvent of type `inType`\n\t     */\n\t    makeEvent: function(inType, inEvent) {\n\t\n\t      // relatedTarget must be null if pointer is captured\n\t      if (this.captureInfo[inEvent.pointerId]) {\n\t        inEvent.relatedTarget = null;\n\t      }\n\t      var e = new _PointerEvent(inType, inEvent);\n\t      if (inEvent.preventDefault) {\n\t        e.preventDefault = inEvent.preventDefault;\n\t      }\n\t      e._target = e._target || inEvent.target;\n\t      return e;\n\t    },\n\t\n\t    // make and dispatch an event in one call\n\t    fireEvent: function(inType, inEvent) {\n\t      var e = this.makeEvent(inType, inEvent);\n\t      return this.dispatchEvent(e);\n\t    },\n\t    /**\n\t     * Returns a snapshot of inEvent, with writable properties.\n\t     *\n\t     * @param {Event} inEvent An event that contains properties to copy.\n\t     * @return {Object} An object containing shallow copies of `inEvent`'s\n\t     *    properties.\n\t     */\n\t    cloneEvent: function(inEvent) {\n\t      var eventCopy = Object.create(null);\n\t      var p;\n\t      for (var i = 0; i < CLONE_PROPS.length; i++) {\n\t        p = CLONE_PROPS[i];\n\t        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i];\n\t\n\t        // Work around SVGInstanceElement shadow tree\n\t        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\n\t        // This is the behavior implemented by Firefox.\n\t        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\n\t          if (eventCopy[p] instanceof SVGElementInstance) {\n\t            eventCopy[p] = eventCopy[p].correspondingUseElement;\n\t          }\n\t        }\n\t      }\n\t\n\t      // keep the semantics of preventDefault\n\t      if (inEvent.preventDefault) {\n\t        eventCopy.preventDefault = function() {\n\t          inEvent.preventDefault();\n\t        };\n\t      }\n\t      return eventCopy;\n\t    },\n\t    getTarget: function(inEvent) {\n\t      var capture = this.captureInfo[inEvent.pointerId];\n\t      if (!capture) {\n\t        return inEvent._target;\n\t      }\n\t      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\n\t        return capture;\n\t      }\n\t    },\n\t    setCapture: function(inPointerId, inTarget) {\n\t      if (this.captureInfo[inPointerId]) {\n\t        this.releaseCapture(inPointerId);\n\t      }\n\t      this.captureInfo[inPointerId] = inTarget;\n\t      var e = document.createEvent('Event');\n\t      e.initEvent('gotpointercapture', true, false);\n\t      e.pointerId = inPointerId;\n\t      this.implicitRelease = this.releaseCapture.bind(this, inPointerId);\n\t      document.addEventListener('pointerup', this.implicitRelease);\n\t      document.addEventListener('pointercancel', this.implicitRelease);\n\t      e._target = inTarget;\n\t      this.asyncDispatchEvent(e);\n\t    },\n\t    releaseCapture: function(inPointerId) {\n\t      var t = this.captureInfo[inPointerId];\n\t      if (t) {\n\t        var e = document.createEvent('Event');\n\t        e.initEvent('lostpointercapture', true, false);\n\t        e.pointerId = inPointerId;\n\t        this.captureInfo[inPointerId] = undefined;\n\t        document.removeEventListener('pointerup', this.implicitRelease);\n\t        document.removeEventListener('pointercancel', this.implicitRelease);\n\t        e._target = t;\n\t        this.asyncDispatchEvent(e);\n\t      }\n\t    },\n\t    /**\n\t     * Dispatches the event to its target.\n\t     *\n\t     * @param {Event} inEvent The event to be dispatched.\n\t     * @return {Boolean} True if an event handler returns true, false otherwise.\n\t     */\n\t    dispatchEvent: /*scope.external.dispatchEvent || */function(inEvent) {\n\t      var t = this.getTarget(inEvent);\n\t      if (t) {\n\t        return t.dispatchEvent(inEvent);\n\t      }\n\t    },\n\t    asyncDispatchEvent: function(inEvent) {\n\t      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\n\t    }\n\t  };\n\t  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\n\t\n\t  var _dispatcher = dispatcher;\n\t\n\t  var targeting = {\n\t    shadow: function(inEl) {\n\t      if (inEl) {\n\t        return inEl.shadowRoot || inEl.webkitShadowRoot;\n\t      }\n\t    },\n\t    canTarget: function(shadow) {\n\t      return shadow && Boolean(shadow.elementFromPoint);\n\t    },\n\t    targetingShadow: function(inEl) {\n\t      var s = this.shadow(inEl);\n\t      if (this.canTarget(s)) {\n\t        return s;\n\t      }\n\t    },\n\t    olderShadow: function(shadow) {\n\t      var os = shadow.olderShadowRoot;\n\t      if (!os) {\n\t        var se = shadow.querySelector('shadow');\n\t        if (se) {\n\t          os = se.olderShadowRoot;\n\t        }\n\t      }\n\t      return os;\n\t    },\n\t    allShadows: function(element) {\n\t      var shadows = [];\n\t      var s = this.shadow(element);\n\t      while (s) {\n\t        shadows.push(s);\n\t        s = this.olderShadow(s);\n\t      }\n\t      return shadows;\n\t    },\n\t    searchRoot: function(inRoot, x, y) {\n\t      if (inRoot) {\n\t        var t = inRoot.elementFromPoint(x, y);\n\t        var st, sr;\n\t\n\t        // is element a shadow host?\n\t        sr = this.targetingShadow(t);\n\t        while (sr) {\n\t\n\t          // find the the element inside the shadow root\n\t          st = sr.elementFromPoint(x, y);\n\t          if (!st) {\n\t\n\t            // check for older shadows\n\t            sr = this.olderShadow(sr);\n\t          } else {\n\t\n\t            // shadowed element may contain a shadow root\n\t            var ssr = this.targetingShadow(st);\n\t            return this.searchRoot(ssr, x, y) || st;\n\t          }\n\t        }\n\t\n\t        // light dom element is the target\n\t        return t;\n\t      }\n\t    },\n\t    owner: function(element) {\n\t      var s = element;\n\t\n\t      // walk up until you hit the shadow root or document\n\t      while (s.parentNode) {\n\t        s = s.parentNode;\n\t      }\n\t\n\t      // the owner element is expected to be a Document or ShadowRoot\n\t      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n\t        s = document;\n\t      }\n\t      return s;\n\t    },\n\t    findTarget: function(inEvent) {\n\t      var x = inEvent.clientX;\n\t      var y = inEvent.clientY;\n\t\n\t      // if the listener is in the shadow root, it is much faster to start there\n\t      var s = this.owner(inEvent.target);\n\t\n\t      // if x, y is not in this root, fall back to document search\n\t      if (!s.elementFromPoint(x, y)) {\n\t        s = document;\n\t      }\n\t      return this.searchRoot(s, x, y);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * This module uses Mutation Observers to dynamically adjust which nodes will\n\t   * generate Pointer Events.\n\t   *\n\t   * All nodes that wish to generate Pointer Events must have the attribute\n\t   * `touch-action` set to `none`.\n\t   */\n\t  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\n\t  var map = Array.prototype.map.call.bind(Array.prototype.map);\n\t  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\n\t  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\n\t  var MO = window.MutationObserver || window.WebKitMutationObserver;\n\t  var SELECTOR = '[touch-action]';\n\t  var OBSERVER_INIT = {\n\t    subtree: true,\n\t    childList: true,\n\t    attributes: true,\n\t    attributeOldValue: true,\n\t    attributeFilter: ['touch-action']\n\t  };\n\t\n\t  function Installer(add, remove, changed, binder) {\n\t    this.addCallback = add.bind(binder);\n\t    this.removeCallback = remove.bind(binder);\n\t    this.changedCallback = changed.bind(binder);\n\t    if (MO) {\n\t      this.observer = new MO(this.mutationWatcher.bind(this));\n\t    }\n\t  }\n\t\n\t  Installer.prototype = {\n\t    watchSubtree: function(target) {\n\t\n\t      // Only watch scopes that can target find, as these are top-level.\n\t      // Otherwise we can see duplicate additions and removals that add noise.\n\t      //\n\t      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\n\t      // a removal without an insertion when a node is redistributed among\n\t      // shadows. Since it all ends up correct in the document, watching only\n\t      // the document will yield the correct mutations to watch.\n\t      if (this.observer && targeting.canTarget(target)) {\n\t        this.observer.observe(target, OBSERVER_INIT);\n\t      }\n\t    },\n\t    enableOnSubtree: function(target) {\n\t      this.watchSubtree(target);\n\t      if (target === document && document.readyState !== 'complete') {\n\t        this.installOnLoad();\n\t      } else {\n\t        this.installNewSubtree(target);\n\t      }\n\t    },\n\t    installNewSubtree: function(target) {\n\t      forEach(this.findElements(target), this.addElement, this);\n\t    },\n\t    findElements: function(target) {\n\t      if (target.querySelectorAll) {\n\t        return target.querySelectorAll(SELECTOR);\n\t      }\n\t      return [];\n\t    },\n\t    removeElement: function(el) {\n\t      this.removeCallback(el);\n\t    },\n\t    addElement: function(el) {\n\t      this.addCallback(el);\n\t    },\n\t    elementChanged: function(el, oldValue) {\n\t      this.changedCallback(el, oldValue);\n\t    },\n\t    concatLists: function(accum, list) {\n\t      return accum.concat(toArray(list));\n\t    },\n\t\n\t    // register all touch-action = none nodes on document load\n\t    installOnLoad: function() {\n\t      document.addEventListener('readystatechange', function() {\n\t        if (document.readyState === 'complete') {\n\t          this.installNewSubtree(document);\n\t        }\n\t      }.bind(this));\n\t    },\n\t    isElement: function(n) {\n\t      return n.nodeType === Node.ELEMENT_NODE;\n\t    },\n\t    flattenMutationTree: function(inNodes) {\n\t\n\t      // find children with touch-action\n\t      var tree = map(inNodes, this.findElements, this);\n\t\n\t      // make sure the added nodes are accounted for\n\t      tree.push(filter(inNodes, this.isElement));\n\t\n\t      // flatten the list\n\t      return tree.reduce(this.concatLists, []);\n\t    },\n\t    mutationWatcher: function(mutations) {\n\t      mutations.forEach(this.mutationHandler, this);\n\t    },\n\t    mutationHandler: function(m) {\n\t      if (m.type === 'childList') {\n\t        var added = this.flattenMutationTree(m.addedNodes);\n\t        added.forEach(this.addElement, this);\n\t        var removed = this.flattenMutationTree(m.removedNodes);\n\t        removed.forEach(this.removeElement, this);\n\t      } else if (m.type === 'attributes') {\n\t        this.elementChanged(m.target, m.oldValue);\n\t      }\n\t    }\n\t  };\n\t\n\t  var installer = Installer;\n\t\n\t  function shadowSelector(v) {\n\t    return 'body /shadow-deep/ ' + selector(v);\n\t  }\n\t  function selector(v) {\n\t    return '[touch-action=\"' + v + '\"]';\n\t  }\n\t  function rule(v) {\n\t    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; touch-action-delay: none; }';\n\t  }\n\t  var attrib2css = [\n\t    'none',\n\t    'auto',\n\t    'pan-x',\n\t    'pan-y',\n\t    {\n\t      rule: 'pan-x pan-y',\n\t      selectors: [\n\t        'pan-x pan-y',\n\t        'pan-y pan-x'\n\t      ]\n\t    }\n\t  ];\n\t  var styles = '';\n\t\n\t  // only install stylesheet if the browser has touch action support\n\t  var hasNativePE = window.PointerEvent || window.MSPointerEvent;\n\t\n\t  // only add shadow selectors if shadowdom is supported\n\t  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\n\t\n\t  function applyAttributeStyles() {\n\t    if (hasNativePE) {\n\t      attrib2css.forEach(function(r) {\n\t        if (String(r) === r) {\n\t          styles += selector(r) + rule(r) + '\\n';\n\t          if (hasShadowRoot) {\n\t            styles += shadowSelector(r) + rule(r) + '\\n';\n\t          }\n\t        } else {\n\t          styles += r.selectors.map(selector) + rule(r.rule) + '\\n';\n\t          if (hasShadowRoot) {\n\t            styles += r.selectors.map(shadowSelector) + rule(r.rule) + '\\n';\n\t          }\n\t        }\n\t      });\n\t\n\t      var el = document.createElement('style');\n\t      el.textContent = styles;\n\t      document.head.appendChild(el);\n\t    }\n\t  }\n\t\n\t  var mouse__pointermap = _dispatcher.pointermap;\n\t\n\t  // radius around touchend that swallows mouse events\n\t  var DEDUP_DIST = 25;\n\t\n\t  // left, middle, right, back, forward\n\t  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\n\t\n\t  var HAS_BUTTONS = false;\n\t  try {\n\t    HAS_BUTTONS = new MouseEvent('test', { buttons: 1 }).buttons === 1;\n\t  } catch (e) {}\n\t\n\t  // handler block for native mouse events\n\t  var mouseEvents = {\n\t    POINTER_ID: 1,\n\t    POINTER_TYPE: 'mouse',\n\t    events: [\n\t      'mousedown',\n\t      'mousemove',\n\t      'mouseup',\n\t      'mouseover',\n\t      'mouseout'\n\t    ],\n\t    register: function(target) {\n\t      _dispatcher.listen(target, this.events);\n\t    },\n\t    unregister: function(target) {\n\t      _dispatcher.unlisten(target, this.events);\n\t    },\n\t    lastTouches: [],\n\t\n\t    // collide with the global mouse listener\n\t    isEventSimulatedFromTouch: function(inEvent) {\n\t      var lts = this.lastTouches;\n\t      var x = inEvent.clientX;\n\t      var y = inEvent.clientY;\n\t      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n\t\n\t        // simulated mouse events will be swallowed near a primary touchend\n\t        var dx = Math.abs(x - t.x);\n\t        var dy = Math.abs(y - t.y);\n\t        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n\t          return true;\n\t        }\n\t      }\n\t    },\n\t    prepareEvent: function(inEvent) {\n\t      var e = _dispatcher.cloneEvent(inEvent);\n\t\n\t      // forward mouse preventDefault\n\t      var pd = e.preventDefault;\n\t      e.preventDefault = function() {\n\t        inEvent.preventDefault();\n\t        pd();\n\t      };\n\t      e.pointerId = this.POINTER_ID;\n\t      e.isPrimary = true;\n\t      e.pointerType = this.POINTER_TYPE;\n\t      return e;\n\t    },\n\t    prepareButtonsForMove: function(e, inEvent) {\n\t      var p = mouse__pointermap.get(this.POINTER_ID);\n\t      e.buttons = p ? p.buttons : 0;\n\t      inEvent.buttons = e.buttons;\n\t    },\n\t    mousedown: function(inEvent) {\n\t      if (!this.isEventSimulatedFromTouch(inEvent)) {\n\t        var p = mouse__pointermap.get(this.POINTER_ID);\n\t        var e = this.prepareEvent(inEvent);\n\t        if (!HAS_BUTTONS) {\n\t          e.buttons = BUTTON_TO_BUTTONS[e.button];\n\t          if (p) { e.buttons |= p.buttons; }\n\t          inEvent.buttons = e.buttons;\n\t        }\n\t        mouse__pointermap.set(this.POINTER_ID, inEvent);\n\t        if (!p) {\n\t          _dispatcher.down(e);\n\t        } else {\n\t          _dispatcher.move(e);\n\t        }\n\t      }\n\t    },\n\t    mousemove: function(inEvent) {\n\t      if (!this.isEventSimulatedFromTouch(inEvent)) {\n\t        var e = this.prepareEvent(inEvent);\n\t        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n\t        _dispatcher.move(e);\n\t      }\n\t    },\n\t    mouseup: function(inEvent) {\n\t      if (!this.isEventSimulatedFromTouch(inEvent)) {\n\t        var p = mouse__pointermap.get(this.POINTER_ID);\n\t        var e = this.prepareEvent(inEvent);\n\t        if (!HAS_BUTTONS) {\n\t          var up = BUTTON_TO_BUTTONS[e.button];\n\t\n\t          // Produces wrong state of buttons in Browsers without `buttons` support\n\t          // when a mouse button that was pressed outside the document is released\n\t          // inside and other buttons are still pressed down.\n\t          e.buttons = p ? p.buttons & ~up : 0;\n\t          inEvent.buttons = e.buttons;\n\t        }\n\t        mouse__pointermap.set(this.POINTER_ID, inEvent);\n\t\n\t        // Support: Firefox <=44 only\n\t        // FF Ubuntu includes the lifted button in the `buttons` property on\n\t        // mouseup.\n\t        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\n\t        if (e.buttons === 0 || e.buttons === BUTTON_TO_BUTTONS[e.button]) {\n\t          this.cleanupMouse();\n\t          _dispatcher.up(e);\n\t        } else {\n\t          _dispatcher.move(e);\n\t        }\n\t      }\n\t    },\n\t    mouseover: function(inEvent) {\n\t      if (!this.isEventSimulatedFromTouch(inEvent)) {\n\t        var e = this.prepareEvent(inEvent);\n\t        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n\t        _dispatcher.enterOver(e);\n\t      }\n\t    },\n\t    mouseout: function(inEvent) {\n\t      if (!this.isEventSimulatedFromTouch(inEvent)) {\n\t        var e = this.prepareEvent(inEvent);\n\t        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n\t        _dispatcher.leaveOut(e);\n\t      }\n\t    },\n\t    cancel: function(inEvent) {\n\t      var e = this.prepareEvent(inEvent);\n\t      _dispatcher.cancel(e);\n\t      this.cleanupMouse();\n\t    },\n\t    cleanupMouse: function() {\n\t      mouse__pointermap.delete(this.POINTER_ID);\n\t    }\n\t  };\n\t\n\t  var mouse = mouseEvents;\n\t\n\t  var captureInfo = _dispatcher.captureInfo;\n\t  var findTarget = targeting.findTarget.bind(targeting);\n\t  var allShadows = targeting.allShadows.bind(targeting);\n\t  var touch__pointermap = _dispatcher.pointermap;\n\t\n\t  // This should be long enough to ignore compat mouse events made by touch\n\t  var DEDUP_TIMEOUT = 2500;\n\t  var CLICK_COUNT_TIMEOUT = 200;\n\t  var ATTRIB = 'touch-action';\n\t  var INSTALLER;\n\t\n\t  // The presence of touch event handlers blocks scrolling, and so we must be careful to\n\t  // avoid adding handlers unnecessarily.  Chrome plans to add a touch-action-delay property\n\t  // (crbug.com/329559) to address this, and once we have that we can opt-in to a simpler\n\t  // handler registration mechanism.  Rather than try to predict how exactly to opt-in to\n\t  // that we'll just leave this disabled until there is a build of Chrome to test.\n\t  var HAS_TOUCH_ACTION_DELAY = false;\n\t\n\t  // handler block for native touch events\n\t  var touchEvents = {\n\t    events: [\n\t      'touchstart',\n\t      'touchmove',\n\t      'touchend',\n\t      'touchcancel'\n\t    ],\n\t    register: function(target) {\n\t      if (HAS_TOUCH_ACTION_DELAY) {\n\t        _dispatcher.listen(target, this.events);\n\t      } else {\n\t        INSTALLER.enableOnSubtree(target);\n\t      }\n\t    },\n\t    unregister: function(target) {\n\t      if (HAS_TOUCH_ACTION_DELAY) {\n\t        _dispatcher.unlisten(target, this.events);\n\t      } else {\n\t\n\t        // TODO(dfreedman): is it worth it to disconnect the MO?\n\t      }\n\t    },\n\t    elementAdded: function(el) {\n\t      var a = el.getAttribute(ATTRIB);\n\t      var st = this.touchActionToScrollType(a);\n\t      if (st) {\n\t        el._scrollType = st;\n\t        _dispatcher.listen(el, this.events);\n\t\n\t        // set touch-action on shadows as well\n\t        allShadows(el).forEach(function(s) {\n\t          s._scrollType = st;\n\t          _dispatcher.listen(s, this.events);\n\t        }, this);\n\t      }\n\t    },\n\t    elementRemoved: function(el) {\n\t      el._scrollType = undefined;\n\t      _dispatcher.unlisten(el, this.events);\n\t\n\t      // remove touch-action from shadow\n\t      allShadows(el).forEach(function(s) {\n\t        s._scrollType = undefined;\n\t        _dispatcher.unlisten(s, this.events);\n\t      }, this);\n\t    },\n\t    elementChanged: function(el, oldValue) {\n\t      var a = el.getAttribute(ATTRIB);\n\t      var st = this.touchActionToScrollType(a);\n\t      var oldSt = this.touchActionToScrollType(oldValue);\n\t\n\t      // simply update scrollType if listeners are already established\n\t      if (st && oldSt) {\n\t        el._scrollType = st;\n\t        allShadows(el).forEach(function(s) {\n\t          s._scrollType = st;\n\t        }, this);\n\t      } else if (oldSt) {\n\t        this.elementRemoved(el);\n\t      } else if (st) {\n\t        this.elementAdded(el);\n\t      }\n\t    },\n\t    scrollTypes: {\n\t      EMITTER: 'none',\n\t      XSCROLLER: 'pan-x',\n\t      YSCROLLER: 'pan-y',\n\t      SCROLLER: /^(?:pan-x pan-y)|(?:pan-y pan-x)|auto$/\n\t    },\n\t    touchActionToScrollType: function(touchAction) {\n\t      var t = touchAction;\n\t      var st = this.scrollTypes;\n\t      if (t === 'none') {\n\t        return 'none';\n\t      } else if (t === st.XSCROLLER) {\n\t        return 'X';\n\t      } else if (t === st.YSCROLLER) {\n\t        return 'Y';\n\t      } else if (st.SCROLLER.exec(t)) {\n\t        return 'XY';\n\t      }\n\t    },\n\t    POINTER_TYPE: 'touch',\n\t    firstTouch: null,\n\t    isPrimaryTouch: function(inTouch) {\n\t      return this.firstTouch === inTouch.identifier;\n\t    },\n\t    setPrimaryTouch: function(inTouch) {\n\t\n\t      // set primary touch if there no pointers, or the only pointer is the mouse\n\t      if (touch__pointermap.size === 0 || (touch__pointermap.size === 1 && touch__pointermap.has(1))) {\n\t        this.firstTouch = inTouch.identifier;\n\t        this.firstXY = { X: inTouch.clientX, Y: inTouch.clientY };\n\t        this.scrolling = false;\n\t        this.cancelResetClickCount();\n\t      }\n\t    },\n\t    removePrimaryPointer: function(inPointer) {\n\t      if (inPointer.isPrimary) {\n\t        this.firstTouch = null;\n\t        this.firstXY = null;\n\t        this.resetClickCount();\n\t      }\n\t    },\n\t    clickCount: 0,\n\t    resetId: null,\n\t    resetClickCount: function() {\n\t      var fn = function() {\n\t        this.clickCount = 0;\n\t        this.resetId = null;\n\t      }.bind(this);\n\t      this.resetId = setTimeout(fn, CLICK_COUNT_TIMEOUT);\n\t    },\n\t    cancelResetClickCount: function() {\n\t      if (this.resetId) {\n\t        clearTimeout(this.resetId);\n\t      }\n\t    },\n\t    typeToButtons: function(type) {\n\t      var ret = 0;\n\t      if (type === 'touchstart' || type === 'touchmove') {\n\t        ret = 1;\n\t      }\n\t      return ret;\n\t    },\n\t    touchToPointer: function(inTouch) {\n\t      var cte = this.currentTouchEvent;\n\t      var e = _dispatcher.cloneEvent(inTouch);\n\t\n\t      // We reserve pointerId 1 for Mouse.\n\t      // Touch identifiers can start at 0.\n\t      // Add 2 to the touch identifier for compatibility.\n\t      var id = e.pointerId = inTouch.identifier + 2;\n\t      e.target = captureInfo[id] || findTarget(e);\n\t      e.bubbles = true;\n\t      e.cancelable = true;\n\t      e.detail = this.clickCount;\n\t      e.button = 0;\n\t      e.buttons = this.typeToButtons(cte.type);\n\t      e.width = inTouch.radiusX || inTouch.webkitRadiusX || 0;\n\t      e.height = inTouch.radiusY || inTouch.webkitRadiusY || 0;\n\t      e.pressure = inTouch.force || inTouch.webkitForce || 0.5;\n\t      e.isPrimary = this.isPrimaryTouch(inTouch);\n\t      e.pointerType = this.POINTER_TYPE;\n\t\n\t      // forward touch preventDefaults\n\t      var self = this;\n\t      e.preventDefault = function() {\n\t        self.scrolling = false;\n\t        self.firstXY = null;\n\t        cte.preventDefault();\n\t      };\n\t      return e;\n\t    },\n\t    processTouches: function(inEvent, inFunction) {\n\t      var tl = inEvent.changedTouches;\n\t      this.currentTouchEvent = inEvent;\n\t      for (var i = 0, t; i < tl.length; i++) {\n\t        t = tl[i];\n\t        inFunction.call(this, this.touchToPointer(t));\n\t      }\n\t    },\n\t\n\t    // For single axis scrollers, determines whether the element should emit\n\t    // pointer events or behave as a scroller\n\t    shouldScroll: function(inEvent) {\n\t      if (this.firstXY) {\n\t        var ret;\n\t        var scrollAxis = inEvent.currentTarget._scrollType;\n\t        if (scrollAxis === 'none') {\n\t\n\t          // this element is a touch-action: none, should never scroll\n\t          ret = false;\n\t        } else if (scrollAxis === 'XY') {\n\t\n\t          // this element should always scroll\n\t          ret = true;\n\t        } else {\n\t          var t = inEvent.changedTouches[0];\n\t\n\t          // check the intended scroll axis, and other axis\n\t          var a = scrollAxis;\n\t          var oa = scrollAxis === 'Y' ? 'X' : 'Y';\n\t          var da = Math.abs(t['client' + a] - this.firstXY[a]);\n\t          var doa = Math.abs(t['client' + oa] - this.firstXY[oa]);\n\t\n\t          // if delta in the scroll axis > delta other axis, scroll instead of\n\t          // making events\n\t          ret = da >= doa;\n\t        }\n\t        this.firstXY = null;\n\t        return ret;\n\t      }\n\t    },\n\t    findTouch: function(inTL, inId) {\n\t      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\n\t        if (t.identifier === inId) {\n\t          return true;\n\t        }\n\t      }\n\t    },\n\t\n\t    // In some instances, a touchstart can happen without a touchend. This\n\t    // leaves the pointermap in a broken state.\n\t    // Therefore, on every touchstart, we remove the touches that did not fire a\n\t    // touchend event.\n\t    // To keep state globally consistent, we fire a\n\t    // pointercancel for this \"abandoned\" touch\n\t    vacuumTouches: function(inEvent) {\n\t      var tl = inEvent.touches;\n\t\n\t      // pointermap.size should be < tl.length here, as the touchstart has not\n\t      // been processed yet.\n\t      if (touch__pointermap.size >= tl.length) {\n\t        var d = [];\n\t        touch__pointermap.forEach(function(value, key) {\n\t\n\t          // Never remove pointerId == 1, which is mouse.\n\t          // Touch identifiers are 2 smaller than their pointerId, which is the\n\t          // index in pointermap.\n\t          if (key !== 1 && !this.findTouch(tl, key - 2)) {\n\t            var p = value.out;\n\t            d.push(p);\n\t          }\n\t        }, this);\n\t        d.forEach(this.cancelOut, this);\n\t      }\n\t    },\n\t    touchstart: function(inEvent) {\n\t      this.vacuumTouches(inEvent);\n\t      this.setPrimaryTouch(inEvent.changedTouches[0]);\n\t      this.dedupSynthMouse(inEvent);\n\t      if (!this.scrolling) {\n\t        this.clickCount++;\n\t        this.processTouches(inEvent, this.overDown);\n\t      }\n\t    },\n\t    overDown: function(inPointer) {\n\t      touch__pointermap.set(inPointer.pointerId, {\n\t        target: inPointer.target,\n\t        out: inPointer,\n\t        outTarget: inPointer.target\n\t      });\n\t      _dispatcher.over(inPointer);\n\t      _dispatcher.enter(inPointer);\n\t      _dispatcher.down(inPointer);\n\t    },\n\t    touchmove: function(inEvent) {\n\t      if (!this.scrolling) {\n\t        if (this.shouldScroll(inEvent)) {\n\t          this.scrolling = true;\n\t          this.touchcancel(inEvent);\n\t        } else {\n\t          inEvent.preventDefault();\n\t          this.processTouches(inEvent, this.moveOverOut);\n\t        }\n\t      }\n\t    },\n\t    moveOverOut: function(inPointer) {\n\t      var event = inPointer;\n\t      var pointer = touch__pointermap.get(event.pointerId);\n\t\n\t      // a finger drifted off the screen, ignore it\n\t      if (!pointer) {\n\t        return;\n\t      }\n\t      var outEvent = pointer.out;\n\t      var outTarget = pointer.outTarget;\n\t      _dispatcher.move(event);\n\t      if (outEvent && outTarget !== event.target) {\n\t        outEvent.relatedTarget = event.target;\n\t        event.relatedTarget = outTarget;\n\t\n\t        // recover from retargeting by shadow\n\t        outEvent.target = outTarget;\n\t        if (event.target) {\n\t          _dispatcher.leaveOut(outEvent);\n\t          _dispatcher.enterOver(event);\n\t        } else {\n\t\n\t          // clean up case when finger leaves the screen\n\t          event.target = outTarget;\n\t          event.relatedTarget = null;\n\t          this.cancelOut(event);\n\t        }\n\t      }\n\t      pointer.out = event;\n\t      pointer.outTarget = event.target;\n\t    },\n\t    touchend: function(inEvent) {\n\t      this.dedupSynthMouse(inEvent);\n\t      this.processTouches(inEvent, this.upOut);\n\t    },\n\t    upOut: function(inPointer) {\n\t      if (!this.scrolling) {\n\t        _dispatcher.up(inPointer);\n\t        _dispatcher.out(inPointer);\n\t        _dispatcher.leave(inPointer);\n\t      }\n\t      this.cleanUpPointer(inPointer);\n\t    },\n\t    touchcancel: function(inEvent) {\n\t      this.processTouches(inEvent, this.cancelOut);\n\t    },\n\t    cancelOut: function(inPointer) {\n\t      _dispatcher.cancel(inPointer);\n\t      _dispatcher.out(inPointer);\n\t      _dispatcher.leave(inPointer);\n\t      this.cleanUpPointer(inPointer);\n\t    },\n\t    cleanUpPointer: function(inPointer) {\n\t      touch__pointermap.delete(inPointer.pointerId);\n\t      this.removePrimaryPointer(inPointer);\n\t    },\n\t\n\t    // prevent synth mouse events from creating pointer events\n\t    dedupSynthMouse: function(inEvent) {\n\t      var lts = mouse.lastTouches;\n\t      var t = inEvent.changedTouches[0];\n\t\n\t      // only the primary finger will synth mouse events\n\t      if (this.isPrimaryTouch(t)) {\n\t\n\t        // remember x/y of last touch\n\t        var lt = { x: t.clientX, y: t.clientY };\n\t        lts.push(lt);\n\t        var fn = (function(lts, lt) {\n\t          var i = lts.indexOf(lt);\n\t          if (i > -1) {\n\t            lts.splice(i, 1);\n\t          }\n\t        }).bind(null, lts, lt);\n\t        setTimeout(fn, DEDUP_TIMEOUT);\n\t      }\n\t    }\n\t  };\n\t\n\t  if (!HAS_TOUCH_ACTION_DELAY) {\n\t    INSTALLER = new installer(touchEvents.elementAdded, touchEvents.elementRemoved,\n\t      touchEvents.elementChanged, touchEvents);\n\t  }\n\t\n\t  var touch = touchEvents;\n\t\n\t  var ms__pointermap = _dispatcher.pointermap;\n\t  var HAS_BITMAP_TYPE = window.MSPointerEvent &&\n\t    typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\n\t  var msEvents = {\n\t    events: [\n\t      'MSPointerDown',\n\t      'MSPointerMove',\n\t      'MSPointerUp',\n\t      'MSPointerOut',\n\t      'MSPointerOver',\n\t      'MSPointerCancel',\n\t      'MSGotPointerCapture',\n\t      'MSLostPointerCapture'\n\t    ],\n\t    register: function(target) {\n\t      _dispatcher.listen(target, this.events);\n\t    },\n\t    unregister: function(target) {\n\t      _dispatcher.unlisten(target, this.events);\n\t    },\n\t    POINTER_TYPES: [\n\t      '',\n\t      'unavailable',\n\t      'touch',\n\t      'pen',\n\t      'mouse'\n\t    ],\n\t    prepareEvent: function(inEvent) {\n\t      var e = inEvent;\n\t      if (HAS_BITMAP_TYPE) {\n\t        e = _dispatcher.cloneEvent(inEvent);\n\t        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\n\t      }\n\t      return e;\n\t    },\n\t    cleanup: function(id) {\n\t      ms__pointermap.delete(id);\n\t    },\n\t    MSPointerDown: function(inEvent) {\n\t      ms__pointermap.set(inEvent.pointerId, inEvent);\n\t      var e = this.prepareEvent(inEvent);\n\t      _dispatcher.down(e);\n\t    },\n\t    MSPointerMove: function(inEvent) {\n\t      var e = this.prepareEvent(inEvent);\n\t      _dispatcher.move(e);\n\t    },\n\t    MSPointerUp: function(inEvent) {\n\t      var e = this.prepareEvent(inEvent);\n\t      _dispatcher.up(e);\n\t      this.cleanup(inEvent.pointerId);\n\t    },\n\t    MSPointerOut: function(inEvent) {\n\t      var e = this.prepareEvent(inEvent);\n\t      _dispatcher.leaveOut(e);\n\t    },\n\t    MSPointerOver: function(inEvent) {\n\t      var e = this.prepareEvent(inEvent);\n\t      _dispatcher.enterOver(e);\n\t    },\n\t    MSPointerCancel: function(inEvent) {\n\t      var e = this.prepareEvent(inEvent);\n\t      _dispatcher.cancel(e);\n\t      this.cleanup(inEvent.pointerId);\n\t    },\n\t    MSLostPointerCapture: function(inEvent) {\n\t      var e = _dispatcher.makeEvent('lostpointercapture', inEvent);\n\t      _dispatcher.dispatchEvent(e);\n\t    },\n\t    MSGotPointerCapture: function(inEvent) {\n\t      var e = _dispatcher.makeEvent('gotpointercapture', inEvent);\n\t      _dispatcher.dispatchEvent(e);\n\t    }\n\t  };\n\t\n\t  var ms = msEvents;\n\t\n\t  function platform_events__applyPolyfill() {\n\t\n\t    // only activate if this platform does not have pointer events\n\t    if (!window.PointerEvent) {\n\t      window.PointerEvent = _PointerEvent;\n\t\n\t      if (window.navigator.msPointerEnabled) {\n\t        var tp = window.navigator.msMaxTouchPoints;\n\t        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n\t          value: tp,\n\t          enumerable: true\n\t        });\n\t        _dispatcher.registerSource('ms', ms);\n\t      } else {\n\t        _dispatcher.registerSource('mouse', mouse);\n\t        if (window.ontouchstart !== undefined) {\n\t          _dispatcher.registerSource('touch', touch);\n\t        }\n\t      }\n\t\n\t      _dispatcher.register(document);\n\t    }\n\t  }\n\t\n\t  var n = window.navigator;\n\t  var s, r;\n\t  function assertDown(id) {\n\t    if (!_dispatcher.pointermap.has(id)) {\n\t      throw new Error('InvalidPointerId');\n\t    }\n\t  }\n\t  if (n.msPointerEnabled) {\n\t    s = function(pointerId) {\n\t      assertDown(pointerId);\n\t      this.msSetPointerCapture(pointerId);\n\t    };\n\t    r = function(pointerId) {\n\t      assertDown(pointerId);\n\t      this.msReleasePointerCapture(pointerId);\n\t    };\n\t  } else {\n\t    s = function setPointerCapture(pointerId) {\n\t      assertDown(pointerId);\n\t      _dispatcher.setCapture(pointerId, this);\n\t    };\n\t    r = function releasePointerCapture(pointerId) {\n\t      assertDown(pointerId);\n\t      _dispatcher.releaseCapture(pointerId, this);\n\t    };\n\t  }\n\t\n\t  function _capture__applyPolyfill() {\n\t    if (window.Element && !Element.prototype.setPointerCapture) {\n\t      Object.defineProperties(Element.prototype, {\n\t        'setPointerCapture': {\n\t          value: s\n\t        },\n\t        'releasePointerCapture': {\n\t          value: r\n\t        }\n\t      });\n\t    }\n\t  }\n\t\n\t  applyAttributeStyles();\n\t  platform_events__applyPolyfill();\n\t  _capture__applyPolyfill();\n\t\n\t  var pointerevents = {\n\t    dispatcher: _dispatcher,\n\t    Installer: installer,\n\t    PointerEvent: _PointerEvent,\n\t    PointerMap: _pointermap,\n\t    targetFinding: targeting\n\t  };\n\t\n\t  return pointerevents;\n\t\n\t}));\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9cec8618c349483cbb21\n **/","import pep from 'pepjs';\r\nimport App from './app';\r\nimport '../css/index.css';\r\n\r\n// Start the app\r\nwindow.app = new App(document.querySelector('.app'));\n\n\n/** WEBPACK FOOTER **\n ** ./source/js/index.js\n **/","/**\r\n * Базовый класс всех дверей\r\n * @class DoorBase\r\n * @param {Number} number\r\n * @param {Function} onUnlock\r\n */\r\nexport default class DoorBase {\r\n\r\n    constructor(number, onUnlock){\r\n        this.number = number;\r\n        this.onUnclockCallback = onUnlock;\r\n\r\n        this.level = document.querySelector('.level_' + number);\r\n        this.door = document.querySelector('.door_level_' + number);\r\n        this.popup = document.querySelector('.popup_level_' + number);\r\n        this.close = this.popup.querySelector('.popup__close');\r\n\r\n        this.isLocked = true;\r\n        this.isDisabled = this.door.classList.contains('door_disabled');\r\n\r\n        this.door.addEventListener('click', onDoorClick.bind(this));\r\n        this.close.addEventListener('click', onCloseClick.bind(this));\r\n\r\n        function onDoorClick() {\r\n            if (!this.isDisabled) {\r\n                this.openPopup();\r\n            }\r\n        }\r\n\r\n        function onCloseClick() {\r\n            this.closePopup();\r\n        }\r\n    }\r\n\r\n    openPopup() {\r\n        this.popup.classList.remove('popup_hidden');\r\n    }\r\n\r\n    closePopup () {\r\n        this.popup.classList.add('popup_hidden');\r\n    }\r\n\r\n    enable () {\r\n        this.door.classList.remove('door_disabled');\r\n        this.isDisabled = false;\r\n    }\r\n\r\n    /**\r\n     * Вызывается, если после последовательности действий\r\n     * дверь считается открытой\r\n     */\r\n    unlock () {\r\n        this.door.classList.remove('door_locked');\r\n        this.isLocked = false;\r\n        this.closePopup();\r\n        this.onUnclockCallback();\r\n        this.showCongratulations();\r\n    }\r\n\r\n    showCongratulations () {\r\n        //alert('Дверь ' + this.number + ' открыта!')\r\n    }\r\n\r\n\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/js/doors/DoorBase.js\n **/","import Door0 from './doors/Door0';\r\nimport Door1 from './doors/Door1';\r\nimport Door2 from './doors/Door2';\r\nimport Box from './doors/Box';\r\n\r\n/**\r\n * @class App\r\n * @param {Element} el\r\n */\r\nexport default function App(el) {\r\n    var doors = [\r\n            new Door0(0, onUnlock),\r\n            new Door1(1, onUnlock),\r\n            new Door2(2, onUnlock),\r\n            new Box(3, onUnlock)\r\n        ];\r\n\r\n    this.doors = doors;\r\n\r\n    /**\r\n     * Callback вызывается в коде двери\r\n     * Тут даем возможность открыть следующие двери\r\n     */\r\n    function onUnlock() {\r\n        var previousUnlocked;\r\n\r\n        // Даем открыть следующую дверь\r\n        for (var i = 0; i < doors.length; i++) {\r\n            if (!doors[i].isLocked) {\r\n                previousUnlocked = true;\r\n            } else {\r\n                if (previousUnlocked && doors[i].isLocked) {\r\n                    doors[i].enable();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    this.initialize = function() {\r\n        this.bindEvents();\r\n    };\r\n\r\n    this.bindEvents = function() {\r\n        document.addEventListener('deviceready', this.onDeviceReady.bind(this), false);\r\n    };\r\n\r\n    this.onDeviceReady = function() {\r\n        this.receivedEvent('deviceready');\r\n    };\r\n\r\n    // Update DOM on a Received Event\r\n    this.receivedEvent = function(id) {\r\n        var parentElement = document.getElementById(id);\r\n        var receivedElement = parentElement.querySelector('.received');\r\n        receivedElement.setAttribute('style', 'display:block;');\r\n    };\r\n\r\n\r\n    window.onerror = function() {\r\n        // здесь можно залогировать и выйти\r\n\r\n        // Попробуем выйти\r\n        if(navigator.app.exitApp){\r\n            navigator.app.exitApp();\r\n        }\r\n\r\n    };\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/js/app.js\n **/","export default class Slider {\r\n\r\n    constructor(el, door) {\r\n\r\n        var containerSlider = el;\r\n        var sliderButton = el.querySelector('.slider__button');\r\n        var startPosition = 0;\r\n        var currentPosition = 0;\r\n        var isGestureStarted = false;\r\n        var doorOwner = door;\r\n\r\n        containerSlider.addEventListener('pointerdown', onPointerDown);\r\n        containerSlider.addEventListener('pointermove', onPointerMove);\r\n\r\n        containerSlider.addEventListener('pointerup', onPointerUp);\r\n        containerSlider.addEventListener('pointercancel', onPointerUp);\r\n        containerSlider.addEventListener('pointerleave', onPointerUp);\r\n\r\n        function onPointerDown(event) {\r\n\r\n            currentPosition = startPosition = event.pageX;\r\n            isGestureStarted = true;\r\n\r\n            // убрал потому что в ie сразу при нажатии на кнопку конкретно\r\n            // сразу всплывает pointerleave\r\n            //containerSlider.setPointerCapture(event.pointerId);\r\n\r\n            disableTransition();\r\n        }\r\n\r\n        function onPointerMove(event) {\r\n            if (!isGestureStarted) {\r\n                return;\r\n            }\r\n\r\n            currentPosition = event.pageX;\r\n            updatePosition();\r\n        }\r\n\r\n        function onPointerUp(event) {\r\n\r\n            console.log(event.type)\r\n\r\n            currentPosition = event.pageX;\r\n\r\n            enableTransition();\r\n\r\n            if (currentPosition - startPosition > 100 && isGestureStarted) {\r\n                doorOwner.unlock();\r\n\r\n            } else {\r\n                resetPosition();\r\n            }\r\n\r\n            isGestureStarted = false;\r\n        }\r\n\r\n        function updatePosition() {\r\n            requestAnimationFrame(function () {\r\n                var diff = currentPosition - startPosition;\r\n\r\n                if (diff < 0) {\r\n                    diff = 0;\r\n                }\r\n\r\n                if (diff > 240) {\r\n                    diff = 240;\r\n                }\r\n\r\n                sliderButton.style.transform = 'translateX(' + diff + 'px)';\r\n            });\r\n        }\r\n\r\n        function resetPosition() {\r\n            requestAnimationFrame(function () {\r\n                sliderButton.style.transform = '';\r\n            });\r\n        }\r\n\r\n        function disableTransition() {\r\n            sliderButton.style.transition = 'none';\r\n        }\r\n\r\n        function enableTransition() {\r\n            sliderButton.style.transition = '';\r\n        }\r\n\r\n        this.show = function () {\r\n            containerSlider.classList.remove('slider_invisible');\r\n        };\r\n\r\n        this.hide = function () {\r\n            containerSlider.classList.add('slider_invisible');\r\n        };\r\n    }\r\n\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./source/js/block/Slider.js\n **/","import DoorBase from './DoorBase';\r\n\r\n/**\r\n * Сундук\r\n * @class Box\r\n * @augments DoorBase\r\n * @param {Number} number\r\n * @param {Function} onUnlock\r\n */\r\nexport default class Box extends DoorBase{\r\n    constructor(number, onUnlock) {\r\n        super(number, onUnlock);\r\n\r\n        this.showCongratulations = function () {\r\n            //alert('Поздравляю! Игра пройдена!');\r\n        };\r\n\r\n        var balls = [\r\n            this.popup.querySelector('.box-riddle__ball_0'),\r\n            this.popup.querySelector('.box-riddle__ball_1'),\r\n            this.popup.querySelector('.box-riddle__ball_2'),\r\n            this.popup.querySelector('.box-riddle__ball_3')\r\n        ];\r\n\r\n        balls.forEach(function (ball) {\r\n            ball.addEventListener('pointerdown', _onBallPointerDown.bind(this));\r\n        }.bind(this));\r\n\r\n        function _onBallPointerDown(event) {\r\n            conditionDoubleTap.call(this, event);\r\n            pressBall.call(this, event);\r\n            setTimeout(unpressBall.bind(this, event), 300);\r\n        }\r\n\r\n        function conditionDoubleTap(event) {\r\n            if (event.target.classList.contains('box-riddle__ball_pressed')) {\r\n                killBall.call(this, event);\r\n                conditionAllKilled.apply(this);\r\n            }\r\n        }\r\n\r\n        function conditionAllKilled() {\r\n\r\n            var allKilled = true;\r\n            balls.forEach(function (ball) {\r\n                if (!ball.classList.contains('box-riddle__ball_killed')) {\r\n                    allKilled = false;\r\n                }\r\n            });\r\n\r\n            if (allKilled) {\r\n                this.unlock();\r\n            }\r\n        }\r\n\r\n        function pressBall(event) {\r\n            event.target.classList.add('box-riddle__ball_pressed');\r\n        }\r\n\r\n        function unpressBall(event) {\r\n            event.target.classList.remove('box-riddle__ball_pressed');\r\n        }\r\n\r\n        function killBall(event) {\r\n            event.target.classList.add('box-riddle__ball_killed');\r\n        }\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/js/doors/Box.js\n **/","import DoorBase from './DoorBase';\r\n\r\n// ===================== Пример кода первой двери =======================\r\n/**\r\n * @class Door0\r\n * @augments DoorBase\r\n * @param {Number} number\r\n * @param {Function} onUnlock\r\n */\r\nexport default class Door0 extends DoorBase {\r\n\r\n    constructor(number, onUnlock){\r\n        super(number, onUnlock);\r\n\r\n        var buttons = [\r\n            this.popup.querySelector('.door-riddle__button_0'),\r\n            this.popup.querySelector('.door-riddle__button_1'),\r\n            this.popup.querySelector('.door-riddle__button_2')\r\n        ];\r\n\r\n        buttons.forEach(function(b) {\r\n            b.addEventListener('pointerdown', _onButtonPointerDown.bind(this));\r\n            b.addEventListener('pointerup', _onButtonPointerUp.bind(this));\r\n            b.addEventListener('pointercancel', _onButtonPointerUp.bind(this));\r\n            b.addEventListener('pointerleave', _onButtonPointerUp.bind(this));\r\n        }.bind(this));\r\n\r\n        function _onButtonPointerDown(e) {\r\n            e.target.classList.add('door-riddle__button_pressed');\r\n            checkCondition.apply(this);\r\n        }\r\n\r\n        function _onButtonPointerUp(e) {\r\n            e.target.classList.remove('door-riddle__button_pressed');\r\n        }\r\n\r\n        /**\r\n         * Проверяем, можно ли теперь открыть дверь\r\n         */\r\n        function checkCondition() {\r\n            var isOpened = true;\r\n            buttons.forEach(function(b) {\r\n                if (!b.classList.contains('door-riddle__button_pressed')) {\r\n                    isOpened = false;\r\n                }\r\n            });\r\n\r\n            // Если все три кнопки зажаты одновременно, то откроем эту дверь\r\n            if (isOpened) {\r\n                this.unlock();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/js/doors/Door0.js\n **/","import DoorBase from './DoorBase';\r\nimport Slider from '../block/Slider';\r\n\r\n/**\r\n * @class Door1\r\n * @augments DoorBase\r\n * @param {Number} number\r\n * @param {Function} onUnlock\r\n */\r\nexport default class Door1 extends DoorBase {\r\n\r\n    constructor(number, onUnlock){\r\n        super(number, onUnlock);\r\n\r\n        var slider = new Slider(this.popup.querySelector('.slider'), this);\r\n\r\n        var alarm = this.popup.querySelector('.door1-riddle__alarm');\r\n\r\n        var buttons = [\r\n            this.popup.querySelector('.door1-riddle__button_0'),\r\n            this.popup.querySelector('.door1-riddle__button_1')\r\n        ];\r\n\r\n        buttons.forEach(function (b) {\r\n            b.addEventListener('pointerdown', _onButtonPointerDownButton.bind(this));\r\n            b.addEventListener('pointerup', _onButtonPointerUpButton.bind(this));\r\n            b.addEventListener('pointercancel', _onButtonPointerUpButton.bind(this));\r\n            b.addEventListener('pointerleave', _onButtonPointerUpButton.bind(this));\r\n        }.bind(this));\r\n\r\n        function _onButtonPointerDownButton(event) {\r\n            pressButton.call(this, event);\r\n            checkConditionButton.apply(this);\r\n        }\r\n\r\n        function _onButtonPointerUpButton(event) {\r\n            unpressButton.call(this, event);\r\n            switchOffAlarm();\r\n            slider.hide();\r\n        }\r\n\r\n        function checkConditionButton() {\r\n            var isOpened = true;\r\n            buttons.forEach(function (button) {\r\n                if (!button.classList.contains('door1-riddle__button_pressed')) {\r\n                    isOpened = false;\r\n                }\r\n            });\r\n\r\n            if (isOpened) {\r\n                switchOnAlarm();\r\n                slider.show();\r\n            }\r\n        }\r\n\r\n        function pressButton(event){\r\n            event.target.classList.add('door1-riddle__button_pressed');\r\n        }\r\n\r\n        function unpressButton(event){\r\n            event.target.classList.remove('door1-riddle__button_pressed');\r\n        }\r\n\r\n        function switchOnAlarm(){\r\n            alarm.classList.add('door1-riddle__alarm_active');\r\n        }\r\n\r\n        function switchOffAlarm(){\r\n            alarm.classList.remove('door1-riddle__alarm_active');\r\n        }\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/js/doors/Door1.js\n **/","import DoorBase from './DoorBase';\r\n\r\n/**\r\n * @class Door2\r\n * @augments DoorBase\r\n * @param {Number} number\r\n * @param {Function} onUnlock\r\n */\r\nexport default class Door2 extends DoorBase {\r\n    constructor(number, onUnlock) {\r\n        super(number, onUnlock);\r\n\r\n        var centerPointEvent = null;\r\n        var endPointEvent = null;\r\n        var isGestureStarted = false;\r\n        var thetaDelta = 0;\r\n        var result = 0;\r\n\r\n        var circle1 = this.popup.querySelector('.door2-riddle__circle1');\r\n        var button = this.popup.querySelector('.door2-riddle__button');\r\n        var monitor = this.popup.querySelector('.door2-riddle__monitor');\r\n\r\n        circle1.addEventListener('pointerleave', _onCircle1PointerUp.bind(this));\r\n        circle1.addEventListener('pointercancel', _onCircle1PointerUp.bind(this));\r\n        circle1.addEventListener('pointerup', _onCircle1PointerUp.bind(this));\r\n        circle1.addEventListener('pointerdown', _onCircle1PointerDown.bind(this));\r\n        circle1.addEventListener('pointermove', _onCircle1PointerMove.bind(this));\r\n\r\n        button.addEventListener('pointerdown', _onButtonPointerDown.bind(this));\r\n        button.addEventListener('pointerleave', _onButtonPointerUp.bind(this));\r\n        button.addEventListener('pointercancel', _onButtonPointerUp.bind(this));\r\n        button.addEventListener('pointerup', _onButtonPointerUp.bind(this));\r\n\r\n        function _onButtonPointerDown(event) {\r\n            pressButton();\r\n            centerPointEvent = event;\r\n        }\r\n\r\n        function _onButtonPointerUp(event) {\r\n            unpressButton();\r\n            centerPointEvent = null;\r\n            resetResult();\r\n        }\r\n\r\n        function _onCircle1PointerDown(event) {\r\n\r\n            if (circle1 === event.target && isPressedButton()) {\r\n                console.log('circle 1' + event.type)\r\n\r\n                isGestureStarted = true;\r\n\r\n                endPointEvent = event;\r\n\r\n                thetaDelta = angle(\r\n                    centerPointEvent.pageX,\r\n                    centerPointEvent.pageY,\r\n                    endPointEvent.pageX,\r\n                    endPointEvent.pageY);\r\n\r\n                console.log(endPointEvent)\r\n            }\r\n\r\n        }\r\n\r\n        function _onCircle1PointerUp(event) {\r\n            console.log(event.type)\r\n            isGestureStarted = false;\r\n            endPointEvent = null;\r\n            resetResult();\r\n        }\r\n\r\n        function _onCircle1PointerMove(event) {\r\n\r\n            if (isGestureStarted) {\r\n\r\n                endPointEvent = event;\r\n\r\n                var theta = angle(\r\n                    centerPointEvent.pageX,\r\n                    centerPointEvent.pageY,\r\n                    endPointEvent.pageX,\r\n                    endPointEvent.pageY);\r\n\r\n                theta = deltaAngle(theta);\r\n\r\n                // не дадим в обратную сторону крутить\r\n                if (isRevers(theta)) {\r\n                    resetResult();\r\n                    return;\r\n                }\r\n\r\n                result = getResult(theta);\r\n\r\n                writeResult(result);\r\n\r\n                if (isWin(result)) {\r\n                    this.unlock();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        function resetResult() {\r\n            monitor.innerText = '';\r\n            result = 0;\r\n        }\r\n\r\n        function writeResult(result) {\r\n            monitor.innerText = Math.round(result) + '%';\r\n        }\r\n\r\n        function isWin(result) {\r\n            return result >= 100;\r\n        }\r\n\r\n        function getResult(theta) {\r\n            return theta / 180 * 100;\r\n        }\r\n\r\n        function isRevers(theta) {\r\n            return theta > 190;\r\n        }\r\n\r\n        function angle(cx, cy, ex, ey) {\r\n            var dy = ey - cy;\r\n            var dx = ex - cx;\r\n            var theta = Math.atan2(dy, dx);\r\n            theta *= 180 / Math.PI;\r\n            return theta;\r\n        }\r\n\r\n        function deltaAngle(theta) {\r\n\r\n            var result = theta - thetaDelta;\r\n\r\n            if (result < 0) {\r\n                result += 360;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        function pressButton() {\r\n            button.classList.add('door2-riddle__button_pressed');\r\n        }\r\n\r\n        function unpressButton() {\r\n            button.classList.remove('door2-riddle__button_pressed');\r\n        }\r\n\r\n        function isPressedButton() {\r\n            if (button.classList.contains('door2-riddle__button_pressed')) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nDoor2.prototype = Object.create(DoorBase.prototype);\r\nDoor2.prototype.constructor = DoorBase;\n\n\n/** WEBPACK FOOTER **\n ** ./source/js/doors/Door2.js\n **/","/*!\n * PEP v0.4.1 | https://github.com/jquery/PEP\n * Copyright jQuery Foundation and other contributors | http://jquery.org/license\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.PointerEventsPolyfill = factory()\n}(this, function () { 'use strict';\n\n  /**\n   * This is the constructor for new PointerEvents.\n   *\n   * New Pointer Events must be given a type, and an optional dictionary of\n   * initialization properties.\n   *\n   * Due to certain platform requirements, events returned from the constructor\n   * identify as MouseEvents.\n   *\n   * @constructor\n   * @param {String} inType The type of the event to create.\n   * @param {Object} [inDict] An optional dictionary of initial event properties.\n   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\n   */\n  var MOUSE_PROPS = [\n    'bubbles',\n    'cancelable',\n    'view',\n    'detail',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n    'pageX',\n    'pageY'\n  ];\n\n  var MOUSE_DEFAULTS = [\n    false,\n    false,\n    null,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n    0,\n    0\n  ];\n\n  function PointerEvent(inType, inDict) {\n    inDict = inDict || Object.create(null);\n\n    var e = document.createEvent('Event');\n    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false);\n\n    // define inherited MouseEvent properties\n    // skip bubbles and cancelable since they're set above in initEvent()\n    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\n      p = MOUSE_PROPS[i];\n      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\n    }\n    e.buttons = inDict.buttons || 0;\n\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (inDict.pressure) {\n      pressure = inDict.pressure;\n    } else {\n      pressure = e.buttons ? 0.5 : 0;\n    }\n\n    // add x/y properties aliased to clientX/Y\n    e.x = e.clientX;\n    e.y = e.clientY;\n\n    // define the properties of the PointerEvent interface\n    e.pointerId = inDict.pointerId || 0;\n    e.width = inDict.width || 0;\n    e.height = inDict.height || 0;\n    e.pressure = pressure;\n    e.tiltX = inDict.tiltX || 0;\n    e.tiltY = inDict.tiltY || 0;\n    e.pointerType = inDict.pointerType || '';\n    e.hwTimestamp = inDict.hwTimestamp || 0;\n    e.isPrimary = inDict.isPrimary || false;\n    return e;\n  }\n\n  var _PointerEvent = PointerEvent;\n\n  /**\n   * This module implements a map of pointer states\n   */\n  var USE_MAP = window.Map && window.Map.prototype.forEach;\n  var PointerMap = USE_MAP ? Map : SparseArrayMap;\n\n  function SparseArrayMap() {\n    this.array = [];\n    this.size = 0;\n  }\n\n  SparseArrayMap.prototype = {\n    set: function(k, v) {\n      if (v === undefined) {\n        return this.delete(k);\n      }\n      if (!this.has(k)) {\n        this.size++;\n      }\n      this.array[k] = v;\n    },\n    has: function(k) {\n      return this.array[k] !== undefined;\n    },\n    delete: function(k) {\n      if (this.has(k)) {\n        delete this.array[k];\n        this.size--;\n      }\n    },\n    get: function(k) {\n      return this.array[k];\n    },\n    clear: function() {\n      this.array.length = 0;\n      this.size = 0;\n    },\n\n    // return value, key, map\n    forEach: function(callback, thisArg) {\n      return this.array.forEach(function(v, k) {\n        callback.call(thisArg, v, k, this);\n      }, this);\n    }\n  };\n\n  var _pointermap = PointerMap;\n\n  var CLONE_PROPS = [\n\n    // MouseEvent\n    'bubbles',\n    'cancelable',\n    'view',\n    'detail',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n\n    // DOM Level 3\n    'buttons',\n\n    // PointerEvent\n    'pointerId',\n    'width',\n    'height',\n    'pressure',\n    'tiltX',\n    'tiltY',\n    'pointerType',\n    'hwTimestamp',\n    'isPrimary',\n\n    // event instance\n    'type',\n    'target',\n    'currentTarget',\n    'which',\n    'pageX',\n    'pageY',\n    'timeStamp'\n  ];\n\n  var CLONE_DEFAULTS = [\n\n    // MouseEvent\n    false,\n    false,\n    null,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n\n    // DOM Level 3\n    0,\n\n    // PointerEvent\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    '',\n    0,\n    false,\n\n    // event instance\n    '',\n    null,\n    null,\n    0,\n    0,\n    0,\n    0\n  ];\n\n  var BOUNDARY_EVENTS = {\n    'pointerover': 1,\n    'pointerout': 1,\n    'pointerenter': 1,\n    'pointerleave': 1\n  };\n\n  var HAS_SVG_INSTANCE = (typeof SVGElementInstance !== 'undefined');\n\n  /**\n   * This module is for normalizing events. Mouse and Touch events will be\n   * collected here, and fire PointerEvents that have the same semantics, no\n   * matter the source.\n   * Events fired:\n   *   - pointerdown: a pointing is added\n   *   - pointerup: a pointer is removed\n   *   - pointermove: a pointer is moved\n   *   - pointerover: a pointer crosses into an element\n   *   - pointerout: a pointer leaves an element\n   *   - pointercancel: a pointer will no longer generate events\n   */\n  var dispatcher = {\n    pointermap: new _pointermap(),\n    eventMap: Object.create(null),\n    captureInfo: Object.create(null),\n\n    // Scope objects for native events.\n    // This exists for ease of testing.\n    eventSources: Object.create(null),\n    eventSourceList: [],\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * `inSource` must contain an array of event names named `events`, and\n     * functions with the names specified in the `events` array.\n     * @param {string} name A name for the event source\n     * @param {Object} source A new source of platform events.\n     */\n    registerSource: function(name, source) {\n      var s = source;\n      var newEvents = s.events;\n      if (newEvents) {\n        newEvents.forEach(function(e) {\n          if (s[e]) {\n            this.eventMap[e] = s[e].bind(s);\n          }\n        }, this);\n        this.eventSources[name] = s;\n        this.eventSourceList.push(s);\n      }\n    },\n    register: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.register.call(es, element);\n      }\n    },\n    unregister: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.unregister.call(es, element);\n      }\n    },\n    contains: /*scope.external.contains || */function(container, contained) {\n      try {\n        return container.contains(contained);\n      } catch (ex) {\n\n        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n        return false;\n      }\n    },\n\n    // EVENTS\n    down: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerdown', inEvent);\n    },\n    move: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointermove', inEvent);\n    },\n    up: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerup', inEvent);\n    },\n    enter: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerenter', inEvent);\n    },\n    leave: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerleave', inEvent);\n    },\n    over: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerover', inEvent);\n    },\n    out: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerout', inEvent);\n    },\n    cancel: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointercancel', inEvent);\n    },\n    leaveOut: function(event) {\n      this.out(event);\n      if (!this.contains(event.target, event.relatedTarget)) {\n        this.leave(event);\n      }\n    },\n    enterOver: function(event) {\n      this.over(event);\n      if (!this.contains(event.target, event.relatedTarget)) {\n        this.enter(event);\n      }\n    },\n\n    // LISTENER LOGIC\n    eventHandler: function(inEvent) {\n\n      // This is used to prevent multiple dispatch of pointerevents from\n      // platform events. This can happen when two elements in different scopes\n      // are set up to create pointer events, which is relevant to Shadow DOM.\n      if (inEvent._handledByPE) {\n        return;\n      }\n      var type = inEvent.type;\n      var fn = this.eventMap && this.eventMap[type];\n      if (fn) {\n        fn(inEvent);\n      }\n      inEvent._handledByPE = true;\n    },\n\n    // set up event listeners\n    listen: function(target, events) {\n      events.forEach(function(e) {\n        this.addEvent(target, e);\n      }, this);\n    },\n\n    // remove event listeners\n    unlisten: function(target, events) {\n      events.forEach(function(e) {\n        this.removeEvent(target, e);\n      }, this);\n    },\n    addEvent: /*scope.external.addEvent || */function(target, eventName) {\n      target.addEventListener(eventName, this.boundHandler);\n    },\n    removeEvent: /*scope.external.removeEvent || */function(target, eventName) {\n      target.removeEventListener(eventName, this.boundHandler);\n    },\n\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `inEvent`.\n     *\n     * @param {string} inType A string representing the type of event to create\n     * @param {Event} inEvent A platform event with a target\n     * @return {Event} A PointerEvent of type `inType`\n     */\n    makeEvent: function(inType, inEvent) {\n\n      // relatedTarget must be null if pointer is captured\n      if (this.captureInfo[inEvent.pointerId]) {\n        inEvent.relatedTarget = null;\n      }\n      var e = new _PointerEvent(inType, inEvent);\n      if (inEvent.preventDefault) {\n        e.preventDefault = inEvent.preventDefault;\n      }\n      e._target = e._target || inEvent.target;\n      return e;\n    },\n\n    // make and dispatch an event in one call\n    fireEvent: function(inType, inEvent) {\n      var e = this.makeEvent(inType, inEvent);\n      return this.dispatchEvent(e);\n    },\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} inEvent An event that contains properties to copy.\n     * @return {Object} An object containing shallow copies of `inEvent`'s\n     *    properties.\n     */\n    cloneEvent: function(inEvent) {\n      var eventCopy = Object.create(null);\n      var p;\n      for (var i = 0; i < CLONE_PROPS.length; i++) {\n        p = CLONE_PROPS[i];\n        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i];\n\n        // Work around SVGInstanceElement shadow tree\n        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\n        // This is the behavior implemented by Firefox.\n        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\n          if (eventCopy[p] instanceof SVGElementInstance) {\n            eventCopy[p] = eventCopy[p].correspondingUseElement;\n          }\n        }\n      }\n\n      // keep the semantics of preventDefault\n      if (inEvent.preventDefault) {\n        eventCopy.preventDefault = function() {\n          inEvent.preventDefault();\n        };\n      }\n      return eventCopy;\n    },\n    getTarget: function(inEvent) {\n      var capture = this.captureInfo[inEvent.pointerId];\n      if (!capture) {\n        return inEvent._target;\n      }\n      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\n        return capture;\n      }\n    },\n    setCapture: function(inPointerId, inTarget) {\n      if (this.captureInfo[inPointerId]) {\n        this.releaseCapture(inPointerId);\n      }\n      this.captureInfo[inPointerId] = inTarget;\n      var e = document.createEvent('Event');\n      e.initEvent('gotpointercapture', true, false);\n      e.pointerId = inPointerId;\n      this.implicitRelease = this.releaseCapture.bind(this, inPointerId);\n      document.addEventListener('pointerup', this.implicitRelease);\n      document.addEventListener('pointercancel', this.implicitRelease);\n      e._target = inTarget;\n      this.asyncDispatchEvent(e);\n    },\n    releaseCapture: function(inPointerId) {\n      var t = this.captureInfo[inPointerId];\n      if (t) {\n        var e = document.createEvent('Event');\n        e.initEvent('lostpointercapture', true, false);\n        e.pointerId = inPointerId;\n        this.captureInfo[inPointerId] = undefined;\n        document.removeEventListener('pointerup', this.implicitRelease);\n        document.removeEventListener('pointercancel', this.implicitRelease);\n        e._target = t;\n        this.asyncDispatchEvent(e);\n      }\n    },\n    /**\n     * Dispatches the event to its target.\n     *\n     * @param {Event} inEvent The event to be dispatched.\n     * @return {Boolean} True if an event handler returns true, false otherwise.\n     */\n    dispatchEvent: /*scope.external.dispatchEvent || */function(inEvent) {\n      var t = this.getTarget(inEvent);\n      if (t) {\n        return t.dispatchEvent(inEvent);\n      }\n    },\n    asyncDispatchEvent: function(inEvent) {\n      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\n    }\n  };\n  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\n\n  var _dispatcher = dispatcher;\n\n  var targeting = {\n    shadow: function(inEl) {\n      if (inEl) {\n        return inEl.shadowRoot || inEl.webkitShadowRoot;\n      }\n    },\n    canTarget: function(shadow) {\n      return shadow && Boolean(shadow.elementFromPoint);\n    },\n    targetingShadow: function(inEl) {\n      var s = this.shadow(inEl);\n      if (this.canTarget(s)) {\n        return s;\n      }\n    },\n    olderShadow: function(shadow) {\n      var os = shadow.olderShadowRoot;\n      if (!os) {\n        var se = shadow.querySelector('shadow');\n        if (se) {\n          os = se.olderShadowRoot;\n        }\n      }\n      return os;\n    },\n    allShadows: function(element) {\n      var shadows = [];\n      var s = this.shadow(element);\n      while (s) {\n        shadows.push(s);\n        s = this.olderShadow(s);\n      }\n      return shadows;\n    },\n    searchRoot: function(inRoot, x, y) {\n      if (inRoot) {\n        var t = inRoot.elementFromPoint(x, y);\n        var st, sr;\n\n        // is element a shadow host?\n        sr = this.targetingShadow(t);\n        while (sr) {\n\n          // find the the element inside the shadow root\n          st = sr.elementFromPoint(x, y);\n          if (!st) {\n\n            // check for older shadows\n            sr = this.olderShadow(sr);\n          } else {\n\n            // shadowed element may contain a shadow root\n            var ssr = this.targetingShadow(st);\n            return this.searchRoot(ssr, x, y) || st;\n          }\n        }\n\n        // light dom element is the target\n        return t;\n      }\n    },\n    owner: function(element) {\n      var s = element;\n\n      // walk up until you hit the shadow root or document\n      while (s.parentNode) {\n        s = s.parentNode;\n      }\n\n      // the owner element is expected to be a Document or ShadowRoot\n      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n        s = document;\n      }\n      return s;\n    },\n    findTarget: function(inEvent) {\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n\n      // if the listener is in the shadow root, it is much faster to start there\n      var s = this.owner(inEvent.target);\n\n      // if x, y is not in this root, fall back to document search\n      if (!s.elementFromPoint(x, y)) {\n        s = document;\n      }\n      return this.searchRoot(s, x, y);\n    }\n  };\n\n  /**\n   * This module uses Mutation Observers to dynamically adjust which nodes will\n   * generate Pointer Events.\n   *\n   * All nodes that wish to generate Pointer Events must have the attribute\n   * `touch-action` set to `none`.\n   */\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\n  var map = Array.prototype.map.call.bind(Array.prototype.map);\n  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\n  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\n  var MO = window.MutationObserver || window.WebKitMutationObserver;\n  var SELECTOR = '[touch-action]';\n  var OBSERVER_INIT = {\n    subtree: true,\n    childList: true,\n    attributes: true,\n    attributeOldValue: true,\n    attributeFilter: ['touch-action']\n  };\n\n  function Installer(add, remove, changed, binder) {\n    this.addCallback = add.bind(binder);\n    this.removeCallback = remove.bind(binder);\n    this.changedCallback = changed.bind(binder);\n    if (MO) {\n      this.observer = new MO(this.mutationWatcher.bind(this));\n    }\n  }\n\n  Installer.prototype = {\n    watchSubtree: function(target) {\n\n      // Only watch scopes that can target find, as these are top-level.\n      // Otherwise we can see duplicate additions and removals that add noise.\n      //\n      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\n      // a removal without an insertion when a node is redistributed among\n      // shadows. Since it all ends up correct in the document, watching only\n      // the document will yield the correct mutations to watch.\n      if (this.observer && targeting.canTarget(target)) {\n        this.observer.observe(target, OBSERVER_INIT);\n      }\n    },\n    enableOnSubtree: function(target) {\n      this.watchSubtree(target);\n      if (target === document && document.readyState !== 'complete') {\n        this.installOnLoad();\n      } else {\n        this.installNewSubtree(target);\n      }\n    },\n    installNewSubtree: function(target) {\n      forEach(this.findElements(target), this.addElement, this);\n    },\n    findElements: function(target) {\n      if (target.querySelectorAll) {\n        return target.querySelectorAll(SELECTOR);\n      }\n      return [];\n    },\n    removeElement: function(el) {\n      this.removeCallback(el);\n    },\n    addElement: function(el) {\n      this.addCallback(el);\n    },\n    elementChanged: function(el, oldValue) {\n      this.changedCallback(el, oldValue);\n    },\n    concatLists: function(accum, list) {\n      return accum.concat(toArray(list));\n    },\n\n    // register all touch-action = none nodes on document load\n    installOnLoad: function() {\n      document.addEventListener('readystatechange', function() {\n        if (document.readyState === 'complete') {\n          this.installNewSubtree(document);\n        }\n      }.bind(this));\n    },\n    isElement: function(n) {\n      return n.nodeType === Node.ELEMENT_NODE;\n    },\n    flattenMutationTree: function(inNodes) {\n\n      // find children with touch-action\n      var tree = map(inNodes, this.findElements, this);\n\n      // make sure the added nodes are accounted for\n      tree.push(filter(inNodes, this.isElement));\n\n      // flatten the list\n      return tree.reduce(this.concatLists, []);\n    },\n    mutationWatcher: function(mutations) {\n      mutations.forEach(this.mutationHandler, this);\n    },\n    mutationHandler: function(m) {\n      if (m.type === 'childList') {\n        var added = this.flattenMutationTree(m.addedNodes);\n        added.forEach(this.addElement, this);\n        var removed = this.flattenMutationTree(m.removedNodes);\n        removed.forEach(this.removeElement, this);\n      } else if (m.type === 'attributes') {\n        this.elementChanged(m.target, m.oldValue);\n      }\n    }\n  };\n\n  var installer = Installer;\n\n  function shadowSelector(v) {\n    return 'body /shadow-deep/ ' + selector(v);\n  }\n  function selector(v) {\n    return '[touch-action=\"' + v + '\"]';\n  }\n  function rule(v) {\n    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; touch-action-delay: none; }';\n  }\n  var attrib2css = [\n    'none',\n    'auto',\n    'pan-x',\n    'pan-y',\n    {\n      rule: 'pan-x pan-y',\n      selectors: [\n        'pan-x pan-y',\n        'pan-y pan-x'\n      ]\n    }\n  ];\n  var styles = '';\n\n  // only install stylesheet if the browser has touch action support\n  var hasNativePE = window.PointerEvent || window.MSPointerEvent;\n\n  // only add shadow selectors if shadowdom is supported\n  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\n\n  function applyAttributeStyles() {\n    if (hasNativePE) {\n      attrib2css.forEach(function(r) {\n        if (String(r) === r) {\n          styles += selector(r) + rule(r) + '\\n';\n          if (hasShadowRoot) {\n            styles += shadowSelector(r) + rule(r) + '\\n';\n          }\n        } else {\n          styles += r.selectors.map(selector) + rule(r.rule) + '\\n';\n          if (hasShadowRoot) {\n            styles += r.selectors.map(shadowSelector) + rule(r.rule) + '\\n';\n          }\n        }\n      });\n\n      var el = document.createElement('style');\n      el.textContent = styles;\n      document.head.appendChild(el);\n    }\n  }\n\n  var mouse__pointermap = _dispatcher.pointermap;\n\n  // radius around touchend that swallows mouse events\n  var DEDUP_DIST = 25;\n\n  // left, middle, right, back, forward\n  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\n\n  var HAS_BUTTONS = false;\n  try {\n    HAS_BUTTONS = new MouseEvent('test', { buttons: 1 }).buttons === 1;\n  } catch (e) {}\n\n  // handler block for native mouse events\n  var mouseEvents = {\n    POINTER_ID: 1,\n    POINTER_TYPE: 'mouse',\n    events: [\n      'mousedown',\n      'mousemove',\n      'mouseup',\n      'mouseover',\n      'mouseout'\n    ],\n    register: function(target) {\n      _dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      _dispatcher.unlisten(target, this.events);\n    },\n    lastTouches: [],\n\n    // collide with the global mouse listener\n    isEventSimulatedFromTouch: function(inEvent) {\n      var lts = this.lastTouches;\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n\n        // simulated mouse events will be swallowed near a primary touchend\n        var dx = Math.abs(x - t.x);\n        var dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n          return true;\n        }\n      }\n    },\n    prepareEvent: function(inEvent) {\n      var e = _dispatcher.cloneEvent(inEvent);\n\n      // forward mouse preventDefault\n      var pd = e.preventDefault;\n      e.preventDefault = function() {\n        inEvent.preventDefault();\n        pd();\n      };\n      e.pointerId = this.POINTER_ID;\n      e.isPrimary = true;\n      e.pointerType = this.POINTER_TYPE;\n      return e;\n    },\n    prepareButtonsForMove: function(e, inEvent) {\n      var p = mouse__pointermap.get(this.POINTER_ID);\n      e.buttons = p ? p.buttons : 0;\n      inEvent.buttons = e.buttons;\n    },\n    mousedown: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = mouse__pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          e.buttons = BUTTON_TO_BUTTONS[e.button];\n          if (p) { e.buttons |= p.buttons; }\n          inEvent.buttons = e.buttons;\n        }\n        mouse__pointermap.set(this.POINTER_ID, inEvent);\n        if (!p) {\n          _dispatcher.down(e);\n        } else {\n          _dispatcher.move(e);\n        }\n      }\n    },\n    mousemove: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        _dispatcher.move(e);\n      }\n    },\n    mouseup: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = mouse__pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          var up = BUTTON_TO_BUTTONS[e.button];\n\n          // Produces wrong state of buttons in Browsers without `buttons` support\n          // when a mouse button that was pressed outside the document is released\n          // inside and other buttons are still pressed down.\n          e.buttons = p ? p.buttons & ~up : 0;\n          inEvent.buttons = e.buttons;\n        }\n        mouse__pointermap.set(this.POINTER_ID, inEvent);\n\n        // Support: Firefox <=44 only\n        // FF Ubuntu includes the lifted button in the `buttons` property on\n        // mouseup.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\n        if (e.buttons === 0 || e.buttons === BUTTON_TO_BUTTONS[e.button]) {\n          this.cleanupMouse();\n          _dispatcher.up(e);\n        } else {\n          _dispatcher.move(e);\n        }\n      }\n    },\n    mouseover: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        _dispatcher.enterOver(e);\n      }\n    },\n    mouseout: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        _dispatcher.leaveOut(e);\n      }\n    },\n    cancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      _dispatcher.cancel(e);\n      this.cleanupMouse();\n    },\n    cleanupMouse: function() {\n      mouse__pointermap.delete(this.POINTER_ID);\n    }\n  };\n\n  var mouse = mouseEvents;\n\n  var captureInfo = _dispatcher.captureInfo;\n  var findTarget = targeting.findTarget.bind(targeting);\n  var allShadows = targeting.allShadows.bind(targeting);\n  var touch__pointermap = _dispatcher.pointermap;\n\n  // This should be long enough to ignore compat mouse events made by touch\n  var DEDUP_TIMEOUT = 2500;\n  var CLICK_COUNT_TIMEOUT = 200;\n  var ATTRIB = 'touch-action';\n  var INSTALLER;\n\n  // The presence of touch event handlers blocks scrolling, and so we must be careful to\n  // avoid adding handlers unnecessarily.  Chrome plans to add a touch-action-delay property\n  // (crbug.com/329559) to address this, and once we have that we can opt-in to a simpler\n  // handler registration mechanism.  Rather than try to predict how exactly to opt-in to\n  // that we'll just leave this disabled until there is a build of Chrome to test.\n  var HAS_TOUCH_ACTION_DELAY = false;\n\n  // handler block for native touch events\n  var touchEvents = {\n    events: [\n      'touchstart',\n      'touchmove',\n      'touchend',\n      'touchcancel'\n    ],\n    register: function(target) {\n      if (HAS_TOUCH_ACTION_DELAY) {\n        _dispatcher.listen(target, this.events);\n      } else {\n        INSTALLER.enableOnSubtree(target);\n      }\n    },\n    unregister: function(target) {\n      if (HAS_TOUCH_ACTION_DELAY) {\n        _dispatcher.unlisten(target, this.events);\n      } else {\n\n        // TODO(dfreedman): is it worth it to disconnect the MO?\n      }\n    },\n    elementAdded: function(el) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      if (st) {\n        el._scrollType = st;\n        _dispatcher.listen(el, this.events);\n\n        // set touch-action on shadows as well\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n          _dispatcher.listen(s, this.events);\n        }, this);\n      }\n    },\n    elementRemoved: function(el) {\n      el._scrollType = undefined;\n      _dispatcher.unlisten(el, this.events);\n\n      // remove touch-action from shadow\n      allShadows(el).forEach(function(s) {\n        s._scrollType = undefined;\n        _dispatcher.unlisten(s, this.events);\n      }, this);\n    },\n    elementChanged: function(el, oldValue) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      var oldSt = this.touchActionToScrollType(oldValue);\n\n      // simply update scrollType if listeners are already established\n      if (st && oldSt) {\n        el._scrollType = st;\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n        }, this);\n      } else if (oldSt) {\n        this.elementRemoved(el);\n      } else if (st) {\n        this.elementAdded(el);\n      }\n    },\n    scrollTypes: {\n      EMITTER: 'none',\n      XSCROLLER: 'pan-x',\n      YSCROLLER: 'pan-y',\n      SCROLLER: /^(?:pan-x pan-y)|(?:pan-y pan-x)|auto$/\n    },\n    touchActionToScrollType: function(touchAction) {\n      var t = touchAction;\n      var st = this.scrollTypes;\n      if (t === 'none') {\n        return 'none';\n      } else if (t === st.XSCROLLER) {\n        return 'X';\n      } else if (t === st.YSCROLLER) {\n        return 'Y';\n      } else if (st.SCROLLER.exec(t)) {\n        return 'XY';\n      }\n    },\n    POINTER_TYPE: 'touch',\n    firstTouch: null,\n    isPrimaryTouch: function(inTouch) {\n      return this.firstTouch === inTouch.identifier;\n    },\n    setPrimaryTouch: function(inTouch) {\n\n      // set primary touch if there no pointers, or the only pointer is the mouse\n      if (touch__pointermap.size === 0 || (touch__pointermap.size === 1 && touch__pointermap.has(1))) {\n        this.firstTouch = inTouch.identifier;\n        this.firstXY = { X: inTouch.clientX, Y: inTouch.clientY };\n        this.scrolling = false;\n        this.cancelResetClickCount();\n      }\n    },\n    removePrimaryPointer: function(inPointer) {\n      if (inPointer.isPrimary) {\n        this.firstTouch = null;\n        this.firstXY = null;\n        this.resetClickCount();\n      }\n    },\n    clickCount: 0,\n    resetId: null,\n    resetClickCount: function() {\n      var fn = function() {\n        this.clickCount = 0;\n        this.resetId = null;\n      }.bind(this);\n      this.resetId = setTimeout(fn, CLICK_COUNT_TIMEOUT);\n    },\n    cancelResetClickCount: function() {\n      if (this.resetId) {\n        clearTimeout(this.resetId);\n      }\n    },\n    typeToButtons: function(type) {\n      var ret = 0;\n      if (type === 'touchstart' || type === 'touchmove') {\n        ret = 1;\n      }\n      return ret;\n    },\n    touchToPointer: function(inTouch) {\n      var cte = this.currentTouchEvent;\n      var e = _dispatcher.cloneEvent(inTouch);\n\n      // We reserve pointerId 1 for Mouse.\n      // Touch identifiers can start at 0.\n      // Add 2 to the touch identifier for compatibility.\n      var id = e.pointerId = inTouch.identifier + 2;\n      e.target = captureInfo[id] || findTarget(e);\n      e.bubbles = true;\n      e.cancelable = true;\n      e.detail = this.clickCount;\n      e.button = 0;\n      e.buttons = this.typeToButtons(cte.type);\n      e.width = inTouch.radiusX || inTouch.webkitRadiusX || 0;\n      e.height = inTouch.radiusY || inTouch.webkitRadiusY || 0;\n      e.pressure = inTouch.force || inTouch.webkitForce || 0.5;\n      e.isPrimary = this.isPrimaryTouch(inTouch);\n      e.pointerType = this.POINTER_TYPE;\n\n      // forward touch preventDefaults\n      var self = this;\n      e.preventDefault = function() {\n        self.scrolling = false;\n        self.firstXY = null;\n        cte.preventDefault();\n      };\n      return e;\n    },\n    processTouches: function(inEvent, inFunction) {\n      var tl = inEvent.changedTouches;\n      this.currentTouchEvent = inEvent;\n      for (var i = 0, t; i < tl.length; i++) {\n        t = tl[i];\n        inFunction.call(this, this.touchToPointer(t));\n      }\n    },\n\n    // For single axis scrollers, determines whether the element should emit\n    // pointer events or behave as a scroller\n    shouldScroll: function(inEvent) {\n      if (this.firstXY) {\n        var ret;\n        var scrollAxis = inEvent.currentTarget._scrollType;\n        if (scrollAxis === 'none') {\n\n          // this element is a touch-action: none, should never scroll\n          ret = false;\n        } else if (scrollAxis === 'XY') {\n\n          // this element should always scroll\n          ret = true;\n        } else {\n          var t = inEvent.changedTouches[0];\n\n          // check the intended scroll axis, and other axis\n          var a = scrollAxis;\n          var oa = scrollAxis === 'Y' ? 'X' : 'Y';\n          var da = Math.abs(t['client' + a] - this.firstXY[a]);\n          var doa = Math.abs(t['client' + oa] - this.firstXY[oa]);\n\n          // if delta in the scroll axis > delta other axis, scroll instead of\n          // making events\n          ret = da >= doa;\n        }\n        this.firstXY = null;\n        return ret;\n      }\n    },\n    findTouch: function(inTL, inId) {\n      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\n        if (t.identifier === inId) {\n          return true;\n        }\n      }\n    },\n\n    // In some instances, a touchstart can happen without a touchend. This\n    // leaves the pointermap in a broken state.\n    // Therefore, on every touchstart, we remove the touches that did not fire a\n    // touchend event.\n    // To keep state globally consistent, we fire a\n    // pointercancel for this \"abandoned\" touch\n    vacuumTouches: function(inEvent) {\n      var tl = inEvent.touches;\n\n      // pointermap.size should be < tl.length here, as the touchstart has not\n      // been processed yet.\n      if (touch__pointermap.size >= tl.length) {\n        var d = [];\n        touch__pointermap.forEach(function(value, key) {\n\n          // Never remove pointerId == 1, which is mouse.\n          // Touch identifiers are 2 smaller than their pointerId, which is the\n          // index in pointermap.\n          if (key !== 1 && !this.findTouch(tl, key - 2)) {\n            var p = value.out;\n            d.push(p);\n          }\n        }, this);\n        d.forEach(this.cancelOut, this);\n      }\n    },\n    touchstart: function(inEvent) {\n      this.vacuumTouches(inEvent);\n      this.setPrimaryTouch(inEvent.changedTouches[0]);\n      this.dedupSynthMouse(inEvent);\n      if (!this.scrolling) {\n        this.clickCount++;\n        this.processTouches(inEvent, this.overDown);\n      }\n    },\n    overDown: function(inPointer) {\n      touch__pointermap.set(inPointer.pointerId, {\n        target: inPointer.target,\n        out: inPointer,\n        outTarget: inPointer.target\n      });\n      _dispatcher.over(inPointer);\n      _dispatcher.enter(inPointer);\n      _dispatcher.down(inPointer);\n    },\n    touchmove: function(inEvent) {\n      if (!this.scrolling) {\n        if (this.shouldScroll(inEvent)) {\n          this.scrolling = true;\n          this.touchcancel(inEvent);\n        } else {\n          inEvent.preventDefault();\n          this.processTouches(inEvent, this.moveOverOut);\n        }\n      }\n    },\n    moveOverOut: function(inPointer) {\n      var event = inPointer;\n      var pointer = touch__pointermap.get(event.pointerId);\n\n      // a finger drifted off the screen, ignore it\n      if (!pointer) {\n        return;\n      }\n      var outEvent = pointer.out;\n      var outTarget = pointer.outTarget;\n      _dispatcher.move(event);\n      if (outEvent && outTarget !== event.target) {\n        outEvent.relatedTarget = event.target;\n        event.relatedTarget = outTarget;\n\n        // recover from retargeting by shadow\n        outEvent.target = outTarget;\n        if (event.target) {\n          _dispatcher.leaveOut(outEvent);\n          _dispatcher.enterOver(event);\n        } else {\n\n          // clean up case when finger leaves the screen\n          event.target = outTarget;\n          event.relatedTarget = null;\n          this.cancelOut(event);\n        }\n      }\n      pointer.out = event;\n      pointer.outTarget = event.target;\n    },\n    touchend: function(inEvent) {\n      this.dedupSynthMouse(inEvent);\n      this.processTouches(inEvent, this.upOut);\n    },\n    upOut: function(inPointer) {\n      if (!this.scrolling) {\n        _dispatcher.up(inPointer);\n        _dispatcher.out(inPointer);\n        _dispatcher.leave(inPointer);\n      }\n      this.cleanUpPointer(inPointer);\n    },\n    touchcancel: function(inEvent) {\n      this.processTouches(inEvent, this.cancelOut);\n    },\n    cancelOut: function(inPointer) {\n      _dispatcher.cancel(inPointer);\n      _dispatcher.out(inPointer);\n      _dispatcher.leave(inPointer);\n      this.cleanUpPointer(inPointer);\n    },\n    cleanUpPointer: function(inPointer) {\n      touch__pointermap.delete(inPointer.pointerId);\n      this.removePrimaryPointer(inPointer);\n    },\n\n    // prevent synth mouse events from creating pointer events\n    dedupSynthMouse: function(inEvent) {\n      var lts = mouse.lastTouches;\n      var t = inEvent.changedTouches[0];\n\n      // only the primary finger will synth mouse events\n      if (this.isPrimaryTouch(t)) {\n\n        // remember x/y of last touch\n        var lt = { x: t.clientX, y: t.clientY };\n        lts.push(lt);\n        var fn = (function(lts, lt) {\n          var i = lts.indexOf(lt);\n          if (i > -1) {\n            lts.splice(i, 1);\n          }\n        }).bind(null, lts, lt);\n        setTimeout(fn, DEDUP_TIMEOUT);\n      }\n    }\n  };\n\n  if (!HAS_TOUCH_ACTION_DELAY) {\n    INSTALLER = new installer(touchEvents.elementAdded, touchEvents.elementRemoved,\n      touchEvents.elementChanged, touchEvents);\n  }\n\n  var touch = touchEvents;\n\n  var ms__pointermap = _dispatcher.pointermap;\n  var HAS_BITMAP_TYPE = window.MSPointerEvent &&\n    typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\n  var msEvents = {\n    events: [\n      'MSPointerDown',\n      'MSPointerMove',\n      'MSPointerUp',\n      'MSPointerOut',\n      'MSPointerOver',\n      'MSPointerCancel',\n      'MSGotPointerCapture',\n      'MSLostPointerCapture'\n    ],\n    register: function(target) {\n      _dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      _dispatcher.unlisten(target, this.events);\n    },\n    POINTER_TYPES: [\n      '',\n      'unavailable',\n      'touch',\n      'pen',\n      'mouse'\n    ],\n    prepareEvent: function(inEvent) {\n      var e = inEvent;\n      if (HAS_BITMAP_TYPE) {\n        e = _dispatcher.cloneEvent(inEvent);\n        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\n      }\n      return e;\n    },\n    cleanup: function(id) {\n      ms__pointermap.delete(id);\n    },\n    MSPointerDown: function(inEvent) {\n      ms__pointermap.set(inEvent.pointerId, inEvent);\n      var e = this.prepareEvent(inEvent);\n      _dispatcher.down(e);\n    },\n    MSPointerMove: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      _dispatcher.move(e);\n    },\n    MSPointerUp: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      _dispatcher.up(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSPointerOut: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      _dispatcher.leaveOut(e);\n    },\n    MSPointerOver: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      _dispatcher.enterOver(e);\n    },\n    MSPointerCancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      _dispatcher.cancel(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSLostPointerCapture: function(inEvent) {\n      var e = _dispatcher.makeEvent('lostpointercapture', inEvent);\n      _dispatcher.dispatchEvent(e);\n    },\n    MSGotPointerCapture: function(inEvent) {\n      var e = _dispatcher.makeEvent('gotpointercapture', inEvent);\n      _dispatcher.dispatchEvent(e);\n    }\n  };\n\n  var ms = msEvents;\n\n  function platform_events__applyPolyfill() {\n\n    // only activate if this platform does not have pointer events\n    if (!window.PointerEvent) {\n      window.PointerEvent = _PointerEvent;\n\n      if (window.navigator.msPointerEnabled) {\n        var tp = window.navigator.msMaxTouchPoints;\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: tp,\n          enumerable: true\n        });\n        _dispatcher.registerSource('ms', ms);\n      } else {\n        _dispatcher.registerSource('mouse', mouse);\n        if (window.ontouchstart !== undefined) {\n          _dispatcher.registerSource('touch', touch);\n        }\n      }\n\n      _dispatcher.register(document);\n    }\n  }\n\n  var n = window.navigator;\n  var s, r;\n  function assertDown(id) {\n    if (!_dispatcher.pointermap.has(id)) {\n      throw new Error('InvalidPointerId');\n    }\n  }\n  if (n.msPointerEnabled) {\n    s = function(pointerId) {\n      assertDown(pointerId);\n      this.msSetPointerCapture(pointerId);\n    };\n    r = function(pointerId) {\n      assertDown(pointerId);\n      this.msReleasePointerCapture(pointerId);\n    };\n  } else {\n    s = function setPointerCapture(pointerId) {\n      assertDown(pointerId);\n      _dispatcher.setCapture(pointerId, this);\n    };\n    r = function releasePointerCapture(pointerId) {\n      assertDown(pointerId);\n      _dispatcher.releaseCapture(pointerId, this);\n    };\n  }\n\n  function _capture__applyPolyfill() {\n    if (window.Element && !Element.prototype.setPointerCapture) {\n      Object.defineProperties(Element.prototype, {\n        'setPointerCapture': {\n          value: s\n        },\n        'releasePointerCapture': {\n          value: r\n        }\n      });\n    }\n  }\n\n  applyAttributeStyles();\n  platform_events__applyPolyfill();\n  _capture__applyPolyfill();\n\n  var pointerevents = {\n    dispatcher: _dispatcher,\n    Installer: installer,\n    PointerEvent: _PointerEvent,\n    PointerMap: _pointermap,\n    targetFinding: targeting\n  };\n\n  return pointerevents;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pepjs/dist/pep.js\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}